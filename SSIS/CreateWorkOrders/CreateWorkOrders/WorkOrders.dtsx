<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/24/2022 2:01:11 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MYRRH-GAMING"
  DTS:CreatorName="MYRRH-GAMING\Myrrh"
  DTS:DTSID="{B651F043-C856-4922-8658-67944E7EEB91}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.180"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="113"
  DTS:VersionGUID="{CAD14F10-5FEB-4DFA-AAB0-134746ACA903}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{8B6380E2-5517-4901-85BD-4A8EB6E85A39}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\MicrosoftVisualStudioProjects\Source\CreateWorkOrders\CreateWorkOrders_ERROR_OUT.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="InfrasWOID"
              DTS:DTSID="{0DDE3D2E-FEAD-490C-BF20-58A0408724B5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="InventoryID"
              DTS:DTSID="{7D1BB5D0-F7B2-44A6-B9E0-0D95D6EF8116}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EmployeeID"
              DTS:DTSID="{7EB4B2F1-FF66-4DC1-A4A9-6B585CF94A20}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="WorkOrderTypeID"
              DTS:DTSID="{BC68717A-9A72-4C88-AAFC-726DC7EBD894}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="WOBegin"
              DTS:DTSID="{CABC5F17-C2BC-47DB-B7B7-2A5254502B54}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="WOEnd"
              DTS:DTSID="{D4A365F3-82F0-4A40-A914-05C437ECF5E8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="WOEquipCost"
              DTS:DTSID="{8F9F2613-CB2F-4E9E-9F0A-53B8401C73BE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="JobComplete"
              DTS:DTSID="{94C065BD-0454-4D61-81CD-1ABD30785A52}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="JobNotes"
              DTS:DTSID="{FEFC8298-D4E4-4D5E-98CE-C06C9E2E9072}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="NoticeDateTime"
              DTS:DTSID="{864A524F-A984-444C-8977-F2C4B815CE00}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{A652497D-3EF2-4D39-B324-F65636D97518}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{4342F254-A5FF-40D0-B396-EE9918AB0620}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.SparcElectricDW 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AA74196C-ACFC-4358-A906-702B52906414}"
      DTS:ObjectName="localhost.SparcElectricDW 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=SparcElectricDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\GenerateWorkOrders"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{363E4C82-848C-4D81-829F-A3E3234FCA2A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="GenerateWorkOrders"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">9,7,OnError,13,OnInformation,18,OnPipelineRowsSent,10,OnProgress,12,OnTaskFailed,18,PipelineBufferLeak,21,PipelineExecutionPlan,22,PipelineInitialization,23,ScriptComponentLogEntry</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnInformation"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnPipelineRowsSent"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnProgress"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="OnTaskFailed"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="PipelineBufferLeak"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="PipelineExecutionPlan"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="PipelineInitialization"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
        <DTS:Property
          DTS:EventName="ScriptComponentLogEntry"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\GenerateWorkOrders\Add WO Labor Cost to data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add WO Labor Cost to data"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Incoming0_ProcessInputRow(Incoming0Buffer inRec)
    {
        // initialize
        double empHours;
        TimeSpan ts;

        Outgoing0Buffer.AddRow();
        Outgoing0Buffer.WOCustomerID = inRec.CustWOID;
        Outgoing0Buffer.SparcWONumber = inRec.SparcWONumber;
        Outgoing0Buffer.CustomerID = inRec.CustomerID;
        Outgoing0Buffer.EmployeeID = inRec.EmployeeID;
        Outgoing0Buffer.WorkOrderTypeID = inRec.WorkOrderTypeID;
        Outgoing0Buffer.WOBegin = inRec.WOBegin;
        Outgoing0Buffer.WOEnd = inRec.WOEnd;
        Outgoing0Buffer.WOEquipCost = inRec.WOEquipCost;
        ts = inRec.WOEnd - inRec.WOBegin;
        empHours = ts.TotalHours;
        Outgoing0Buffer.WOLaborCost = inRec.HourlyRate * Convert.ToDecimal(empHours);
        Outgoing0Buffer.JobComplete = inRec.JobComplete;
        Outgoing0Buffer.JobNotes = inRec.JobNotes;
        Outgoing0Buffer.MeterModelID = inRec.MeterModelID;
        Outgoing0Buffer.NoticeDateTime = inRec.NoticeDateTime;
        Outgoing0Buffer.DWProc = inRec.DWProc;

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0faef3b2e3194afb82014201f0c37d16.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{37BB04C8-0530-4315-8800-C30370BEADC9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0faef3b2e3194afb82014201f0c37d16</RootNamespace>
    <AssemblyName>SC_0faef3b2e3194afb82014201f0c37d16</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Incoming0Buffer: ScriptBuffer

{
    public Incoming0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 CustWOID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool CustWOID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int64 SparcWONumber
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool SparcWONumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 CustomerID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool CustomerID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 EmployeeID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool EmployeeID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int32 WorkOrderTypeID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[4]);
        }
    }
    public bool WorkOrderTypeID_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public DateTime WOBegin
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[5]);
        }
    }
    public bool WOBegin_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime WOEnd
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool WOEnd_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Decimal WOEquipCost
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[7]);
        }
    }
    public bool WOEquipCost_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Boolean JobComplete
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[8]);
        }
    }
    public bool JobComplete_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String JobNotes
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool JobNotes_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int32 MeterModelID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[10]);
        }
    }
    public bool MeterModelID_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public DateTime NoticeDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[11]);
        }
    }
    public bool NoticeDateTime_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public Boolean DWProc
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[12]);
        }
    }
    public bool DWProc_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public Decimal HourlyRate
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[13]);
        }
    }
    public bool HourlyRate_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Outgoing0Buffer: ScriptBuffer

{
    public Outgoing0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 WOCustomerID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool WOCustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 SparcWONumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SparcWONumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 CustomerID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EmployeeID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EmployeeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WorkOrderTypeID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool WorkOrderTypeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOBegin
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WOBegin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOEnd
    {
        set
        {
            this[6] = value;
        }
    }
    public bool WOEnd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WOEquipCost
    {
        set
        {
            this[7] = value;
        }
    }
    public bool WOEquipCost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WOLaborCost
    {
        set
        {
            this[8] = value;
        }
    }
    public bool WOLaborCost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean JobComplete
    {
        set
        {
            this[9] = value;
        }
    }
    public bool JobComplete_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String JobNotes
    {
        set
        {
            this[10] = value;
        }
    }
    public bool JobNotes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MeterModelID
    {
        set
        {
            this[11] = value;
        }
    }
    public bool MeterModelID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime NoticeDateTime
    {
        set
        {
            this[12] = value;
        }
    }
    public bool NoticeDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean DWProc
    {
        set
        {
            this[13] = value;
        }
    }
    public bool DWProc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0faef3b2e3194afb82014201f0c37d16.Properties.Settings.get_Default():SC_0faef3b2e3194afb82014201f0c37d16.Properties.Sett" +
    "ings")]

namespace SC_0faef3b2e3194afb82014201f0c37d16.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Outgoing0Buffer Outgoing0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Incoming0", StringComparison.Ordinal))
        {
            Incoming0_ProcessInput(new Incoming0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Outgoing0Buffer)
        {
            Outgoing0Buffer.SetEndOfRowset();
            Outgoing0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Outgoing0"))
            {
                Outgoing0Buffer = new Outgoing0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Incoming0_ProcessInput(Incoming0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Incoming0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Incoming0_ProcessInputRow(Incoming0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0faef3b2e3194afb82014201f0c37d16</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0faef3b2e3194afb82014201f0c37d16</msb:DisplayName>
    <msb:ProjectId>{8BAFC7E7-1B66-4F84-A961-80E3406A0375}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0faef3b2e3194afb82014201f0c37d16.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0faef3b2e3194afb82014201f0c37d16")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0faef3b2e3194afb82014201f0c37d16")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0faef3b2e3194afb82014201f0c37d16.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0faef3b2e3194afb82014201f0c37d16.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0faef3b2e3194afb82014201f0c37d16.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0faef3b2e3194afb82014201f0c37d16.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0faef3b2e3194afb82014201f0c37d16.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0faef3b2e3194afb82014201f0c37d16.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGbo82IAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAA5kUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJRFAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA7CUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADI
RQAAAAAAAEgAAAACAAUAICcAALwdAAABAAAAAAAAANxEAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAHwEAAAEAABECewMAAARv
QQAABgJ7AwAABANvBgAABm8lAAAGAnsDAAAEA28IAAAGbycAAAYCewMAAAQDbwoAAAZvKQAABgJ7
AwAABANvDAAABm8rAAAGAnsDAAAEA28OAAAGby0AAAYCewMAAAQDbxAAAAZvLwAABgJ7AwAABANv
EgAABm8xAAAGAnsDAAAEA28UAAAGbzMAAAYDbxIAAAYDbxAAAAYoEgAACgsSASgTAAAKCgJ7AwAA
BANvIAAABgYoFAAACigVAAAKbzUAAAYCewMAAAQDbxYAAAZvNwAABgJ7AwAABANvGAAABm85AAAG
AnsDAAAEA28aAAAGbzsAAAYCewMAAAQDbxwAAAZvPQAABgJ7AwAABANvHgAABm8/AAAGKh4CKEQA
AAYqKgIDBAUoFgAACipSAnsXAAAKAnsYAAAKFpRvGQAACioiAhYoGgAACipSAnsXAAAKAnsYAAAK
F5RvGQAACioiAhcoGgAACipSAnsXAAAKAnsYAAAKGJRvGwAACioiAhgoGgAACipSAnsXAAAKAnsY
AAAKGZRvGwAACioiAhkoGgAACipSAnsXAAAKAnsYAAAKGpRvGwAACioiAhooGgAACipSAnsXAAAK
AnsYAAAKG5RvHAAACioiAhsoGgAACipSAnsXAAAKAnsYAAAKHJRvHAAACioiAhwoGgAACipSAnsX
AAAKAnsYAAAKHZRvHQAACioiAh0oGgAACipSAnsXAAAKAnsYAAAKHpRvHgAACioiAh4oGgAACipW
AnsXAAAKAnsYAAAKHwmUbx8AAAoqJgIfCSgaAAAKKlYCexcAAAoCexgAAAofCpRvGwAACiomAh8K
KBoAAAoqVgJ7FwAACgJ7GAAACh8LlG8cAAAKKiYCHwsoGgAACipWAnsXAAAKAnsYAAAKHwyUbx4A
AAoqJgIfDCgaAAAKKlYCexcAAAoCexgAAAofDZRvHQAACiomAh8NKBoAAAoqHgIoIAAACioeAigh
AAAKKjoCFgOMHwAAASgiAAAKKloDLAgCFigjAAAKKnIBAABwcyQAAAp6OgIXA4wfAAABKCIAAAoq
WgMsCAIXKCMAAAoqcgEAAHBzJAAACno6AhgDjCEAAAEoIgAACipaAywIAhgoIwAACipyAQAAcHMk
AAAKejoCGQOMIQAAASgiAAAKKloDLAgCGSgjAAAKKnIBAABwcyQAAAp6OgIaA4whAAABKCIAAAoq
WgMsCAIaKCMAAAoqcgEAAHBzJAAACno6AhsDjBIAAAEoIgAACipaAywIAhsoIwAACipyAQAAcHMk
AAAKejoCHAOMEgAAASgiAAAKKloDLAgCHCgjAAAKKnIBAABwcyQAAAp6OgIdA4wTAAABKCIAAAoq
WgMsCAIdKCMAAAoqcgEAAHBzJAAACno6Ah4DjBMAAAEoIgAACipaAywIAh4oIwAACipyAQAAcHMk
AAAKej4CHwkDjCIAAAEoIgAACipeAywJAh8JKCMAAAoqcgEAAHBzJAAACnoqAh8KAygiAAAKKl4D
LAkCHwooIwAACipyAQAAcHMkAAAKej4CHwsDjCEAAAEoIgAACipeAywJAh8LKCMAAAoqcgEAAHBz
JAAACno+Ah8MA4wSAAABKCIAAAoqXgMsCQIfDCgjAAAKKnIBAABwcyQAAAp6PgIfDQOMIgAAASgi
AAAKKl4DLAkCHw0oIwAACipyAQAAcHMkAAAKeh4CKCUAAAoqHgIoJgAACip+AignAAAKAgJzTAAA
Bn0BAAAEAgJzTgAABn0CAAAEKgAAABMwBABPAAAAAAAAAARyngAAcBpvKAAACiwVAgUCAygpAAAK
DgRzBQAABm9KAAAGBW8qAAAKLCMCAnsEAAAEF1h9BAAABAJ7BAAABBczDAJvRgAABgIoRwAABioG
Km4CewMAAAQsEgJ7AwAABG9CAAAGAhR9AwAABCoAAAATMAUAPQAAAAIAABEWCisuBAaUDgRysgAA
cCgrAAAKMxkCBQaaAgQGlCgpAAAKDgRzJAAABn0DAAAEBhdYCgYDMs4Cb0kAAAYqSisHAgNvSwAA
BgNvIgAABi3xKjoCKCwAAAoCA30FAAAEKoICewUAAARvLQAACm8uAAAKcsYAAHBvLwAACm8wAAAK
KjoCKCwAAAoCA30GAAAEKh4CKCwAAAoqrn4HAAAELR5y3AAAcNAIAAACKDEAAApvMgAACnMzAAAK
gAcAAAR+BwAABCoafggAAAQqHgKACAAABCoafgkAAAQqHgIoNAAACiouc1QAAAaACQAABCoAAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD4DAAAI34AAGQNAACoDAAAI1N0cmlu
Z3MAAAAADBoAAFABAAAjVVMAXBsAABAAAAAjR1VJRAAAAGwbAABQAgAAI0Jsb2IAAAAAAAAAAgAA
AVcVogEJAQAAAPoBMwAWAAABAAAAKgAAAAkAAAAJAAAAVQAAADAAAAA0AAAAEAAAAAIAAAAFAAAA
PAAAAD0AAAABAAAABgAAAAEAAAAAABcFAQAAAAAABgD5AxwKBgCNBBwKBgBFAwkKDwCQCgAABgBy
A0AIBgDcA0AIBgC9A0AIBgB0BEAIBgAZBEAIBgAyBEAIBgCJA0AIBgCkA8gECgBNBGMCBgDbB70H
CgBqCWMCDgBbCWMCCgC4CGMCBgBaAr0HBgD5BL0HCgC8C2MCBgBsC70HEgBWAKEJBgAoAwkKBgB7
CTwKBgCsCBwIFgDYAgEFFgBZAwEFFgCxAgcIBgANAxwKBgDpC70HBgB7AL0HBgCBCL0HBgByAL0H
BgDTB70HBgDlBL0HBgCbCL0HGgABAMkJGgAaAMkJGgA9AMkJBgCEAr0HBgDoAb0HBgCSDEAIAAAA
AKUAAAAAAAEAAQABABAA5AcAABQAAQABAAEAEAA7CQAAPQABAAUAAQAQAEsJAAA9AAEAJAABABAA
ngsAAFEAAQBEAAEAEAAnCwAAVQAFAEwAAQAQAM4KAABVAAYATgAAABAAQwqfClUABwBPAAABEAAX
C58KcQAJAFMABgAnC9MABgDOCtcABgBLCdsAAQChAd8AAQCsC+IAAQCsC+IAEQDEB+YAEQChAuoA
EQDYAe4AUCAAAAAAxgCrBAYAAQBYIAAAAADGALYEBgABAGAgAAAAAMYAbAzyAAEAiyEAAAAAhhjy
CQYAAgCTIQAAAACGGPIJPQACAJ4hAAAAAIYIrgD4AAUAsyEAAAAAhgg/BW8ABQC8IQAAAACGCBcJ
+AAFANEhAAAAAIYIDQdvAAUA2iEAAAAAhgg0AfwABQDvIQAAAACGCP0FbwAFAPghAAAAAIYIuwD8
AAUADSIAAAAAhghTBW8ABQAWIgAAAACGCNkA/AAFACsiAAAAAIYIfwVvAAUANCIAAAAAhgjvBwAB
BQBJIgAAAACGCOcGbwAFAFIiAAAAAIYIxAEAAQUAZyIAAAAAhghNBm8ABQBwIgAAAACGCPELBQEF
AIUiAAAAAIYIZwdvAAUAjiIAAAAAhgjtAm8ABQCjIgAAAACGCLkGbwAFAKwiAAAAAIYI2AoKAQUA
wiIAAAAAhgg/B28ABQDMIgAAAACGCAEB/AAFAOIiAAAAAIYItQVvAAUA7CIAAAAAhggxAgABBQAC
IwAAAACGCG8GbwAFAAwjAAAAAIYIiwFvAAUAIiMAAAAAhggpBm8ABQAsIwAAAACGCMkCBQEFAEIj
AAAAAIYIowZvAAUATCMAAAAAhgCGDG8ABQBUIwAAAACGAIYLbwAFAJMhAAAAAIYY8gk9AAUAXCMA
AAAAhggjAQ4BCABrIwAAAACGCOUFEwEJAIIjAAAAAIYIKQkOAQoAkSMAAAAAhggmBxMBCwCoIwAA
AACGCEMBAQAMALcjAAAAAIYIEwYTAQ0AziMAAAAAhgjKAAEADgDdIwAAAACGCGkFEwEPAPQjAAAA
AIYI7QABABAAAyQAAAAAhgiaBRMBEQAaJAAAAACGCPsHGAESACkkAAAAAIYI+gYTARMAQCQAAAAA
hgjOARgBFABPJAAAAACGCF4GEwEVAGYkAAAAAIYIAQweARYAdSQAAAAAhgh+BxMBFwCMJAAAAACG
CBEMHgEYAJskAAAAAIYIlQcTARkAsiQAAAAAhgj9AhMBGgDCJAAAAACGCNAGEwEbANokAAAAAIYI
5QoQABwA5SQAAAAAhghTBxMBHQD9JAAAAACGCBIBAQAeAA0lAAAAAIYIzQUTAR8AJSUAAAAAhghE
AhgBIAA1JQAAAACGCIkGEwEhAE0lAAAAAIYIlgETASIAXSUAAAAAhgg7BhMBIwB1JQAAAACGAGUM
BgAkAH0lAAAAAIYAgwsGACQAVCMAAAAAhgCGC28AJACFJQAAAACGGPIJBgAkAKglAAAAAMYATAwk
ASQAAyYAAAAAxgFKCwYAKAAFJgAAAACBALABBgAoACQmAAAAAMYAWQwuASgAAyYAAAAAxgFYCwYA
LABtJgAAAADGAUIM8gAsAAMmAAAAAMYBbAzyAC0AgCYAAAAAhhjyCToBLgCPJgAAAACGCHIIpQAv
ALAmAAAAAIYY8gk6AS8AvyYAAAAAgxjyCQYAMADHJgAAAACTCHcJQAEwAPMmAAAAAJMIiQJFATAA
+iYAAAAAkwiVAkoBMAACJwAAAACWCJILUAExAAknAAAAAIYY8gkGADEAEScAAAAAkRj4CVUBMQAA
AAEAhQEAAAEAcAkAAAIA8goAAAMAxggAAAEAcAkAAAIA8goAAAMAxggAAAEAwgQAAAEAwgQAAAEA
wgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQA
AAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEA
wgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAwgQAAAEAUgEAAAIADAIAAAMAcAkA
AAQAxggAAAEAUAsAAAIA/wkAAAMAMwsAAAQAxggAAAEAcAkAAAEAigwAAAEAwgsAAAEAwgsAAAEA
wgQJAPIJAQARAPIJBgAZAPIJCgApAPIJEAAxAPIJEAA5APIJEABBAPIJEABJAPIJEABRAPIJEABZ
APIJEABhAPIJEABpAPIJBgC5APIJBgDZAPIJFQDpAPIJBgChAKsEBgChALYEBgCRADEIIQBxADsL
KgDxAOwELgCZAJsMNAB5APIJPQB5AHAJRwB5APIKSwCBAHgATwB5AKUHVACBAG8AWQCBAFcCXgCB
APYEZACBANAHVACBAOIEagB5AIYMbwB5AIYLbwB5ALQHcwB5AKwHAQABAfIJEAB5AGUMBgB5AIML
BgChAPIJBgAZASALeQChAAYLgQCBAHMLbwChAFoBiwCpAPIJBgChAGYBkgApAVIImAAxARYCngA5
AYsJpQBBAfoBqgBBAY4MswDBAPIJuQDhAPIJBgAuAAsAhwEuABMAkAEuABsArwEuACMAuAEuACsA
4QEuADMA4QEuADsA4QEuAEMAuAEuAEsA5wEuAFMA4QEuAFsA/gFDAGMASAIDAWsASAIhAXsASAJJ
B3MArwFpB3MArwEbAIcAAwABAAQAHQAGADkACAA6AAkAPAAAALIAWQEAAEMFXQEAAC0JWQEAACoH
XQEAAEcBYQEAABcGXQEAAM4AYQEAAG0FXQEAAPEAYQEAAJ4FXQEAAP8HZQEAAP4GXQEAANIBZQEA
AGIGXQEAAAUMagEAAIIHXQEAAAEDXQEAANQGXQEAAOkKbwEAAFcHXQEAABYBYQEAANEFXQEAAEgC
ZQEAAI0GXQEAAJoBXQEAAD8GXQEAAM0CagEAAKcGXQEAACcBWQEAAOkFXQEAAC0JWQEAACoHXQEA
AEcBYQEAABcGXQEAAM4AYQEAAG0FXQEAAPEAYQEAAJ4FXQEAAP8HZQEAAP4GXQEAANIBZQEAAGIG
XQEAAAUMagEAAIIHXQEAABUMagEAAJkHXQEAAAEDXQEAANQGXQEAAOkKbwEAAFcHXQEAABYBYQEA
ANEFXQEAAEgCZQEAAI0GXQEAAJoBXQEAAD8GXQEAAHYIcwEAAHsJeAEAAKkCfQEAAJYLggECAAYA
AwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQACAA4AEwACAA8AFQAC
ABAAFwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQACABYAIwACABcAJQACABgAJwACABkA
KQACABoAKwACABsALQACABwALwACAB0AMQACAB4AMwACAB8ANQACACAANwACACEAOQABACUAOwAB
ACYAPQABACcAPwABACgAQQABACkAQwABACoARQABACsARwABACwASQABAC0ASwABAC4ATQABAC8A
TwABADAAUQABADEAUwABADIAVQABADMAVwABADQAWQABADUAWwABADYAXQABADcAXwABADgAYQAB
ADkAYwABADoAZQABADsAZwABADwAaQABAD0AawABAD4AbQABAD8AbwABAEAAcQACAE0AcwACAFAA
dQACAFEAdwABAFIAdwACAFMAeQAEgAAAAQAAAAAAAAAAAAAAAACBAAAABAAAAAAAAAAAAAAAwQB8
AQAAAAAPAAAAAAAAAAAAAADKAMwLAAAAAA8AAAAAAAAAAAAAAMoAIQwAAAAADwAAAAAAAAAAAAAA
ygDQCAAAAAAEAAAAAAAAAAAAAADBAL0HAAAAAA8AAAAAAAAAAAAAAMoA8wgAAAAAAAAAAAEAAABN
CgAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29s
bGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2Vy
MTAwAEdldEludDMyAEdldEludDY0AFNDXzBmYWVmM2IyZTMxOTRhZmI4MjAxNDIwMWYwYzM3ZDE2
ADxNb2R1bGU+AGdldF9DdXN0V09JRABnZXRfRW1wbG95ZWVJRABzZXRfRW1wbG95ZWVJRABnZXRf
V29ya09yZGVyVHlwZUlEAHNldF9Xb3JrT3JkZXJUeXBlSUQAZ2V0X01ldGVyTW9kZWxJRABzZXRf
TWV0ZXJNb2RlbElEAHNldF9XT0N1c3RvbWVySUQAZ2V0X0N1c3RvbWVySUQAc2V0X0N1c3RvbWVy
SUQASW5wdXRJRABHZXRPdXRwdXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAaW5S
ZWMAZ2V0X0RXUHJvYwBzZXRfRFdQcm9jAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNo
ZWQAZ2V0X1dPRW5kAHNldF9XT0VuZABkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAGdl
dF9Ob3RpY2VEYXRlVGltZQBzZXRfTm90aWNlRGF0ZVRpbWUAR2V0RGF0ZVRpbWUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAZ2V0X0hvdXJseVJhdGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAZ2V0X0pvYkNvbXBsZXRlAHNldF9Kb2JDb21wbGV0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAR2V0U3RyaW5nAFRvRGVjaW1hbABHZXREZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
Q18wZmFlZjNiMmUzMTk0YWZiODIwMTQyMDFmMGMzN2QxNi5kbGwAZ2V0X0N1c3RXT0lEX0lzTnVs
bABnZXRfRW1wbG95ZWVJRF9Jc051bGwAc2V0X0VtcGxveWVlSURfSXNOdWxsAGdldF9Xb3JrT3Jk
ZXJUeXBlSURfSXNOdWxsAHNldF9Xb3JrT3JkZXJUeXBlSURfSXNOdWxsAGdldF9NZXRlck1vZGVs
SURfSXNOdWxsAHNldF9NZXRlck1vZGVsSURfSXNOdWxsAHNldF9XT0N1c3RvbWVySURfSXNOdWxs
AGdldF9DdXN0b21lcklEX0lzTnVsbABzZXRfQ3VzdG9tZXJJRF9Jc051bGwAZ2V0X0RXUHJvY19J
c051bGwAc2V0X0RXUHJvY19Jc051bGwAZ2V0X1dPRW5kX0lzTnVsbABzZXRfV09FbmRfSXNOdWxs
AGdldF9Ob3RpY2VEYXRlVGltZV9Jc051bGwAc2V0X05vdGljZURhdGVUaW1lX0lzTnVsbABnZXRf
SG91cmx5UmF0ZV9Jc051bGwAZ2V0X0pvYkNvbXBsZXRlX0lzTnVsbABzZXRfSm9iQ29tcGxldGVf
SXNOdWxsAGdldF9XT0JlZ2luX0lzTnVsbABzZXRfV09CZWdpbl9Jc051bGwAZ2V0X1NwYXJjV09O
dW1iZXJfSXNOdWxsAHNldF9TcGFyY1dPTnVtYmVyX0lzTnVsbABnZXRfSm9iTm90ZXNfSXNOdWxs
AHNldF9Kb2JOb3Rlc19Jc051bGwAZ2V0X1dPRXF1aXBDb3N0X0lzTnVsbABzZXRfV09FcXVpcENv
c3RfSXNOdWxsAHNldF9XT0xhYm9yQ29zdF9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0A
cmVzb3VyY2VNYW4AR2V0Qm9vbGVhbgBUaW1lU3BhbgBTY3JpcHRNYWluAGdldF9XT0JlZ2luAHNl
dF9XT0JlZ2luAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1
YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rp
b24AZ2V0X0Nvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJp
c29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAZ2V0
X1NwYXJjV09OdW1iZXIAc2V0X1NwYXJjV09OdW1iZXIASW5jb21pbmcwQnVmZmVyAE91dGdvaW5n
MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ29ubmVjdGlvbk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFw
cGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9y
AE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzBmYWVmM2IyZTMxOTRhZmI4MjAxNDIwMWYwYzM3ZDE2
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wZmFlZjNi
MmUzMTk0YWZiODIwMTQyMDFmMGMzN2QxNi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBnZXRfSm9iTm90
ZXMAc2V0X0pvYk5vdGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0
aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQnVmZmVycwBnZXRfVG90YWxIb3VycwBGaW5pc2hPdXRw
dXRzAENyZWF0ZU5ld091dHB1dFJvd3MAT2JqZWN0AGdldF9FbmRPZlJvd3NldABTZXRFbmRPZlJv
d3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21w
b25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AGdldF9XT0VxdWlwQ29z
dABzZXRfV09FcXVpcENvc3QAc2V0X1dPTGFib3JDb3N0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AEluY29taW5nMF9Qcm9jZXNzSW5wdXQAUHJpbWVPdXRwdXQAQWRkUm93AEluY29t
aW5nMF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAb3BfTXVsdGlwbHkAAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAE0kAbgBjAG8AbQBpAG4A
ZwAwAAATTwB1AHQAZwBvAGkAbgBnADAAABVDAG8AbgBuAGUAYwB0AGkAbwBuAABxUwBDAF8AMABm
AGEAZQBmADMAYgAyAGUAMwAxADkANABhAGYAYgA4ADIAMAAxADQAMgAwADEAZgAwAGMAMwA3AGQA
MQA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAABz1fuq3WdFC
omQXBGDLmSgABCABAQgDIAABBSABARERBCABAQ4FIAEBEWkFBwINETkIAAIRORFJEUkDIAANBQAB
EU0NCAACEU0RTRFNCSADARJBHQgSRQMGEkEDBh0IBCABCggEIAECCAQgAQgIBSABEUkIBSABEU0I
BCABDggDIAACBSACAQgcByACAg4RgJEFIAEdCAgDBwEIBgACCBJFDgUgABKAlQUgABKAmQYgARKA
nQ4EIAASWQgAARKAoRGApQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRAwYSGAMGEhwD
BhIQAgYIAwYSUQMGEmEDBhJlAwYSJAUgAQESDAMgAAoDIAAIBCAAEUkEIAARTQMgAA4EIAEBCgQg
AQECBSABARFJBSABARFNCSAEAQgOEkESRQsgBAEIHQgdEkESRQUgAQESUQQAABJhBAAAEmUFAAEB
EmUEAAASJAMAAAEDKAAKAygAAgMoAAgEKAARSQQoABFNAygADgQoABJZBAgAEmEECAASZQQIABIk
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18w
ZmFlZjNiMmUzMTk0YWZiODIwMTQyMDFmMGMzN2QxNgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIyAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAALxFAAAAAAAAAAAAANZF
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIRQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAw
AGYAYQBlAGYAMwBiADIAZQAzADEAOQA0AGEAZgBiADgAMgAwADEANAAyADAAMQBmADAAYwAzADcA
ZAAxADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADAAZgBhAGUAZgAzAGIAMgBlADMA
MQA5ADQAYQBmAGIAOAAyADAAMQA0ADIAMAAxAGYAMABjADMANwBkADEANgAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMABmAGEAZQBmADMA
YgAyAGUAMwAxADkANABhAGYAYgA4ADIAMAAxADQAMgAwADEAZgAwAGMAMwA3AGQAMQA2AC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAAZgBhAGUAZgAzAGIA
MgBlADMAMQA5ADQAYQBmAGIAOAAyADAAMQA0ADIAMAAxAGYAMABjADMANwBkADEANgAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA6DUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0faef3b2e3194afb82014201f0c37d16</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">AC</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Connections[Connection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0]"
                  hasSideEffects="true"
                  name="Incoming0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[CustWOID]"
                      cachedDataType="i8"
                      cachedName="CustWOID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[CustWOID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[SparcWONumber]"
                      cachedDataType="i8"
                      cachedName="SparcWONumber"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[SparcWONumber]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[WorkOrderTypeID]"
                      cachedDataType="i4"
                      cachedName="WorkOrderTypeID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WorkOrderTypeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[WOBegin]"
                      cachedDataType="date"
                      cachedName="WOBegin"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOBegin]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[WOEnd]"
                      cachedDataType="date"
                      cachedName="WOEnd"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOEnd]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[WOEquipCost]"
                      cachedDataType="cy"
                      cachedName="WOEquipCost"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOEquipCost]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[JobComplete]"
                      cachedDataType="bool"
                      cachedName="JobComplete"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[JobComplete]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[JobNotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="JobNotes"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[JobNotes]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[MeterModelID]"
                      cachedDataType="i4"
                      cachedName="MeterModelID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[MeterModelID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[NoticeDateTime]"
                      cachedDataType="date"
                      cachedName="NoticeDateTime"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[NoticeDateTime]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[DWProc]"
                      cachedDataType="bool"
                      cachedName="DWProc"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[DWProc]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0].Columns[HourlyRate]"
                      cachedDataType="cy"
                      cachedName="HourlyRate"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output].Columns[HourlyRate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0]"
                  hasSideEffects="true"
                  name="Outgoing0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOCustomerID]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOCustomerID]"
                      name="WOCustomerID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[SparcWONumber]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[SparcWONumber]"
                      name="SparcWONumber" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[CustomerID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WorkOrderTypeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WorkOrderTypeID]"
                      name="WorkOrderTypeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOBegin]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOBegin]"
                      name="WOBegin" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEnd]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEnd]"
                      name="WOEnd" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEquipCost]"
                      dataType="cy"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEquipCost]"
                      name="WOEquipCost" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOLaborCost]"
                      dataType="cy"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOLaborCost]"
                      name="WOLaborCost" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobComplete]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobComplete]"
                      name="JobComplete" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="240"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobNotes]"
                      name="JobNotes" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[MeterModelID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[MeterModelID]"
                      name="MeterModelID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[NoticeDateTime]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[NoticeDateTime]"
                      name="NoticeDateTime" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[DWProc]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[DWProc]"
                      name="DWProc" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add WO Labor to Infras Data"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Outgoing0Buffer Outgoing0Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Incoming0", StringComparison.Ordinal))
        {
            Incoming0_ProcessInput(new Incoming0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Outgoing0Buffer)
        {
            Outgoing0Buffer.SetEndOfRowset();
            Outgoing0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Outgoing0"))
            {
                Outgoing0Buffer = new Outgoing0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Incoming0_ProcessInput(Incoming0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Incoming0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Incoming0_ProcessInputRow(Incoming0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Incoming0_ProcessInputRow(Incoming0Buffer inRec)
    {
        // initialize
        double empHours;
        TimeSpan ts;

        Outgoing0Buffer.AddRow();
        Outgoing0Buffer.WOInfrasID = inRec.InfrasWOID;
        Outgoing0Buffer.SparcWONumber = inRec.SparcWONumber;
        Outgoing0Buffer.InventoryID = inRec.InventoryID;
        Outgoing0Buffer.EmployeeID = inRec.EmployeeID;
        Outgoing0Buffer.WorkOrderTypeID = inRec.WorkOrderTypeID;
        Outgoing0Buffer.WOBegin = inRec.WOBegin;
        Outgoing0Buffer.WOEnd = inRec.WOEnd;
        Outgoing0Buffer.WOEquipCost = inRec.WOEquipCost;
        ts = inRec.WOEnd - inRec.WOBegin;
        empHours = ts.TotalHours;
        Outgoing0Buffer.WOLaborCost = inRec.HourlyRate * Convert.ToDecimal(empHours);
        Outgoing0Buffer.JobComplete = inRec.JobComplete;
        Outgoing0Buffer.JobNotes = inRec.JobNotes;
        Outgoing0Buffer.NoticeDateTime = inRec.NoticeDateTime;
        Outgoing0Buffer.DWProc = inRec.DWProc;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Incoming0Buffer: ScriptBuffer

{
    public Incoming0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 InfrasWOID
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool InfrasWOID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int64 SparcWONumber
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[1]);
        }
    }
    public bool SparcWONumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 InventoryID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool InventoryID_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 EmployeeID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool EmployeeID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int32 WorkOrderTypeID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[4]);
        }
    }
    public bool WorkOrderTypeID_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public DateTime WOBegin
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[5]);
        }
    }
    public bool WOBegin_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime WOEnd
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool WOEnd_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Decimal WOEquipCost
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[7]);
        }
    }
    public bool WOEquipCost_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public Boolean JobComplete
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[8]);
        }
    }
    public bool JobComplete_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String JobNotes
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool JobNotes_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public DateTime NoticeDateTime
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[10]);
        }
    }
    public bool NoticeDateTime_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public Boolean DWProc
    {
        get
        {
            return Buffer.GetBoolean(BufferColumnIndexes[11]);
        }
    }
    public bool DWProc_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public Int32 EmpID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[12]);
        }
    }
    public bool EmpID_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public Decimal HourlyRate
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[13]);
        }
    }
    public bool HourlyRate_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Outgoing0Buffer: ScriptBuffer

{
    public Outgoing0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 WOInfrasID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool WOInfrasID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 SparcWONumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SparcWONumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 InventoryID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool InventoryID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EmployeeID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EmployeeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WorkOrderTypeID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool WorkOrderTypeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOBegin
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WOBegin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOEnd
    {
        set
        {
            this[6] = value;
        }
    }
    public bool WOEnd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WOEquipCost
    {
        set
        {
            this[7] = value;
        }
    }
    public bool WOEquipCost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WOLaborCost
    {
        set
        {
            this[8] = value;
        }
    }
    public bool WOLaborCost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean JobComplete
    {
        set
        {
            this[9] = value;
        }
    }
    public bool JobComplete_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String JobNotes
    {
        set
        {
            this[10] = value;
        }
    }
    public bool JobNotes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime NoticeDateTime
    {
        set
        {
            this[11] = value;
        }
    }
    public bool NoticeDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean DWProc
    {
        set
        {
            this[12] = value;
        }
    }
    public bool DWProc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties.Settings.get_Default():SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties.Sett" +
    "ings")]

namespace SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4fc6ef6f70204b4280fb8b8e75b0c043</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4fc6ef6f70204b4280fb8b8e75b0c043</msb:DisplayName>
    <msb:ProjectId>{4CCF35CC-5E1D-4561-A684-DD2CA0FC79BD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4fc6ef6f70204b4280fb8b8e75b0c043.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4fc6ef6f70204b4280fb8b8e75b0c043")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4fc6ef6f70204b4280fb8b8e75b0c043")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4fc6ef6f70204b4280fb8b8e75b0c043.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8220D0AB-2950-4C23-9675-35D343077699}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4fc6ef6f70204b4280fb8b8e75b0c043</RootNamespace>
    <AssemblyName>SC_4fc6ef6f70204b4280fb8b8e75b0c043</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4fc6ef6f70204b4280fb8b8e75b0c043.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4fc6ef6f70204b4280fb8b8e75b0c043.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIHo82IAAAAAAAAAAOAAIiALATAAACYAAAAIAAAAAAAANkUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOREAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPCUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
RQAAAAAAAEgAAAACAAUA5CYAAEgdAAABAAAAAAAAACxEAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMADgEAAAEAABECewMAAARv
PwAABgJ7AwAABANvBgAABm8lAAAGAnsDAAAEA28IAAAGbycAAAYCewMAAAQDbwoAAAZvKQAABgJ7
AwAABANvDAAABm8rAAAGAnsDAAAEA28OAAAGby0AAAYCewMAAAQDbxAAAAZvLwAABgJ7AwAABANv
EgAABm8xAAAGAnsDAAAEA28UAAAGbzMAAAYDbxIAAAYDbxAAAAYoEgAACgsSASgTAAAKCgJ7AwAA
BANvIAAABgYoFAAACigVAAAKbzUAAAYCewMAAAQDbxYAAAZvNwAABgJ7AwAABANvGAAABm85AAAG
AnsDAAAEA28aAAAGbzsAAAYCewMAAAQDbxwAAAZvPQAABioeAihCAAAGKioCAwQFKBYAAAoqUgJ7
FwAACgJ7GAAAChaUbxkAAAoqIgIWKBoAAAoqUgJ7FwAACgJ7GAAACheUbxkAAAoqIgIXKBoAAAoq
UgJ7FwAACgJ7GAAAChiUbxsAAAoqIgIYKBoAAAoqUgJ7FwAACgJ7GAAAChmUbxsAAAoqIgIZKBoA
AAoqUgJ7FwAACgJ7GAAAChqUbxsAAAoqIgIaKBoAAAoqUgJ7FwAACgJ7GAAAChuUbxwAAAoqIgIb
KBoAAAoqUgJ7FwAACgJ7GAAAChyUbxwAAAoqIgIcKBoAAAoqUgJ7FwAACgJ7GAAACh2Ubx0AAAoq
IgIdKBoAAAoqUgJ7FwAACgJ7GAAACh6Ubx4AAAoqIgIeKBoAAAoqVgJ7FwAACgJ7GAAACh8JlG8f
AAAKKiYCHwkoGgAACipWAnsXAAAKAnsYAAAKHwqUbxwAAAoqJgIfCigaAAAKKlYCexcAAAoCexgA
AAofC5RvHgAACiomAh8LKBoAAAoqVgJ7FwAACgJ7GAAACh8MlG8bAAAKKiYCHwwoGgAACipWAnsX
AAAKAnsYAAAKHw2Ubx0AAAoqJgIfDSgaAAAKKh4CKCAAAAoqHgIoIQAACio6AhYDjB8AAAEoIgAA
CipaAywIAhYoIwAACipyAQAAcHMkAAAKejoCFwOMHwAAASgiAAAKKloDLAgCFygjAAAKKnIBAABw
cyQAAAp6OgIYA4whAAABKCIAAAoqWgMsCAIYKCMAAAoqcgEAAHBzJAAACno6AhkDjCEAAAEoIgAA
CipaAywIAhkoIwAACipyAQAAcHMkAAAKejoCGgOMIQAAASgiAAAKKloDLAgCGigjAAAKKnIBAABw
cyQAAAp6OgIbA4wSAAABKCIAAAoqWgMsCAIbKCMAAAoqcgEAAHBzJAAACno6AhwDjBIAAAEoIgAA
CipaAywIAhwoIwAACipyAQAAcHMkAAAKejoCHQOMEwAAASgiAAAKKloDLAgCHSgjAAAKKnIBAABw
cyQAAAp6OgIeA4wTAAABKCIAAAoqWgMsCAIeKCMAAAoqcgEAAHBzJAAACno+Ah8JA4wiAAABKCIA
AAoqXgMsCQIfCSgjAAAKKnIBAABwcyQAAAp6KgIfCgMoIgAACipeAywJAh8KKCMAAAoqcgEAAHBz
JAAACno+Ah8LA4wSAAABKCIAAAoqXgMsCQIfCygjAAAKKnIBAABwcyQAAAp6PgIfDAOMIgAAASgi
AAAKKl4DLAkCHwwoIwAACipyAQAAcHMkAAAKeh4CKCUAAAoqHgIoJgAACip+AignAAAKAgJzSgAA
Bn0BAAAEAgJzTAAABn0CAAAEKhMwBABPAAAAAAAAAARyngAAcBpvKAAACiwVAgUCAygpAAAKDgRz
BQAABm9IAAAGBW8qAAAKLCMCAnsEAAAEF1h9BAAABAJ7BAAABBczDAJvRAAABgIoRQAABioGKm4C
ewMAAAQsEgJ7AwAABG9AAAAGAhR9AwAABCoAAAATMAUAPQAAAAIAABEWCisuBAaUDgRysgAAcCgr
AAAKMxkCBQaaAgQGlCgpAAAKDgRzJAAABn0DAAAEBhdYCgYDMs4Cb0cAAAYqSisHAgNvSQAABgNv
IgAABi3xKjoCKCwAAAoCA30FAAAEKoICewUAAARvLQAACm8uAAAKcsYAAHBvLwAACm8wAAAKKjoC
KCwAAAoCA30GAAAEKh4CKCwAAAoqrn4HAAAELR5y3AAAcNAIAAACKDEAAApvMgAACnMzAAAKgAcA
AAR+BwAABCoafggAAAQqHgKACAAABCoafgkAAAQqHgIoNAAACiouc1IAAAaACQAABCoAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC4DAAAI34AACQNAAB0DAAAI1N0cmluZ3MA
AAAAmBkAAFABAAAjVVMA6BoAABAAAAAjR1VJRAAAAPgaAABQAgAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPoBMwAWAAABAAAAKgAAAAkAAAAJAAAAUwAAAC4AAAA0AAAAEAAAAAIAAAAFAAAAOgAA
ADsAAAABAAAABgAAAAEAAAAAAAEFAQAAAAAABgDjA+kJBgB3BOkJBgAvA9YJDwBdCgAABgBcAw0I
BgDGAw0IBgCnAw0IBgBeBA0IBgADBA0IBgAcBA0IBgBzAw0IBgCOA7IECgA3BE0CBgCoB4oHCgA3
CU0CDgAoCU0CCgCFCE0CBgBEAooHBgDjBIoHCgCJC00CBgA5C4oHEgBWAG4JBgASA9YJBgBICQkK
BgB5COkHFgDCAusEFgBDA+sEFgCbAtQHBgD3AukJBgC2C4oHBgCfAIoHBgBOCIoHBgByAIoHBgCg
B4oHBgDPBIoHBgBoCIoHGgABAJYJGgAaAJYJGgA9AJYJBgBuAooHBgDSAYoHBgBfDA0IAAAAAKUA
AAAAAAEAAQABABAAsQcAABQAAQABAAEAEAAICQAAPQABAAUAAQAQABgJAAA9AAEAJAABABAAawsA
AFEAAQBCAAEAEAD0CgAAVQAFAEoAAQAQAJsKAABVAAYATAAAABAAEApsClUABwBNAAABEADkCmwK
cQAJAFEABgD0CtMABgCbCtcABgAYCdsAAQCLAd8AAQB5C+IAAQB5C+IAEQCRB+YAEQCLAuoAEQDC
Ae4AUCAAAAAAxgCVBAYAAQBYIAAAAADGAKAEBgABAGAgAAAAAMYAOQzyAAEAeiEAAAAAhhi/CQYA
AgCCIQAAAACGGL8JPQACAI0hAAAAAIYIrgD4AAUAoiEAAAAAhggpBW8ABQCrIQAAAACGCOQI+AAF
AMAhAAAAAIYI2gZvAAUAySEAAAAAhggwAfwABQDeIQAAAACGCMgFbwAFAOchAAAAAIYIvQD8AAUA
/CEAAAAAhgg/BW8ABQAFIgAAAACGCNsA/AAFABoiAAAAAIYIawVvAAUAIyIAAAAAhgi8BwABBQA4
IgAAAACGCLQGbwAFAEEiAAAAAIYIrgEAAQUAViIAAAAAhggaBm8ABQBfIgAAAACGCL4LBQEFAHQi
AAAAAIYINAdvAAUAfSIAAAAAhgjXAm8ABQCSIgAAAACGCIYGbwAFAJsiAAAAAIYIpQoKAQUAsSIA
AAAAhggMB28ABQC7IgAAAACGCBsCAAEFANEiAAAAAIYIPAZvAAUA2yIAAAAAhgh1AW8ABQDxIgAA
AACGCPYFbwAFAPsiAAAAAIYIAwH8AAUAESMAAAAAhgihBW8ABQAbIwAAAACGCLMCBQEFADEjAAAA
AIYIcAZvAAUAOyMAAAAAhgBTDG8ABQBDIwAAAACGAFMLbwAFAIIhAAAAAIYYvwk9AAUASyMAAAAA
hggNAQ4BCABaIwAAAACGCLIFEwEJAHEjAAAAAIYI9ggOAQoAgCMAAAAAhgjzBhMBCwCXIwAAAACG
CEABAQAMAKYjAAAAAIYI3wUTAQ0AvSMAAAAAhgjMAAEADgDMIwAAAACGCFUFEwEPAOMjAAAAAIYI
7wABABAA8iMAAAAAhgiGBRMBEQAJJAAAAACGCMgHGAESABgkAAAAAIYIxwYTARMALyQAAAAAhgi4
ARgBFAA+JAAAAACGCCsGEwEVAFUkAAAAAIYIzgseARYAZCQAAAAAhghLBxMBFwB7JAAAAACGCN4L
HgEYAIokAAAAAIYIYgcTARkAoSQAAAAAhgjnAhMBGgCxJAAAAACGCJ0GEwEbAMkkAAAAAIYIsgoQ
ABwA1CQAAAAAhgggBxMBHQDsJAAAAACGCC4CGAEeAPwkAAAAAIYIVgYTAR8AFCUAAAAAhgiAARMB
IAAkJQAAAACGCAgGEwEhADwlAAAAAIYAMgwGACIARCUAAAAAhgBQCwYAIgBDIwAAAACGAFMLbwAi
AEwlAAAAAIYYvwkGACIAbCUAAAAAxgAZDCQBIgDHJQAAAADGARcLBgAmAMklAAAAAIEAmgEGACYA
6CUAAAAAxgAmDC4BJgDHJQAAAADGASULBgAqADEmAAAAAMYBDwzyACoAxyUAAAAAxgE5DPIAKwBE
JgAAAACGGL8JOgEsAFMmAAAAAIYIPwilAC0AdCYAAAAAhhi/CToBLQCDJgAAAACDGL8JBgAuAIsm
AAAAAJMIRAlAAS4AtyYAAAAAkwhzAkUBLgC+JgAAAACTCH8CSgEuAMYmAAAAAJYIXwtQAS8AzSYA
AAAAhhi/CQYALwDVJgAAAACRGMUJVQEvAAAAAQBvAQAAAQA9CQAAAgC/CgAAAwCTCAAAAQA9CQAA
AgC/CgAAAwCTCAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCs
BAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAA
AQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQCsBAAAAQAc
AQAAAgD2AQAAAwA9CQAABACTCAAAAQAdCwAAAgDMCQAAAwAACwAABACTCAAAAQA9CQAAAQBXDAAA
AQCPCwAAAQCPCwAAAQCsBAkAvwkBABEAvwkGABkAvwkKACkAvwkQADEAvwkQADkAvwkQAEEAvwkQ
AEkAvwkQAFEAvwkQAFkAvwkQAGEAvwkQAGkAvwkGALkAvwkGANkAvwkVAOkAvwkGAKEAlQQGAKEA
oAQGAJEA/gchAHEACAsqAPEA1gQuAJkAaAw0AHkAvwk9AHkAPQlHAHkAvwpLAIEAnABPAHkAcgdU
AIEAbwBZAIEAQQJeAIEA4ARkAIEAnQdUAIEAzARqAHkAUwxvAHkAUwtvAHkAgQdzAHkAeQcBAAEB
vwkQAHkAMgwGAHkAUAsGAKEAvwkGABkB7Qp5AKEA0wqBAIEAQAtvAKEAJAGLAKkAvwkGAKEAUAGS
ACkBHwiYADEBAAKeADkBWAmlAEEB5AGqAEEBWwyzAMEAvwm5AOEAvwkGAC4ACwCHAS4AEwCQAS4A
GwCvAS4AIwC4AS4AKwDhAS4AMwDhAS4AOwDhAS4AQwC4AS4ASwDnAS4AUwDhAS4AWwD+AUMAYwBI
AgMBawBIAiEBewBIAgkHcwCvASkHcwCvARsAhwADAAEABAAdAAYANwAIADgACQA6AAAAsgBZAQAA
LQVdAQAA+ghZAQAA9wZdAQAARAFhAQAA4wVdAQAA0ABhAQAAWQVdAQAA8wBhAQAAigVdAQAAzAdl
AQAAywZdAQAAvAFlAQAALwZdAQAA0gtqAQAATwddAQAA6wJdAQAAoQZdAQAAtgpvAQAAJAddAQAA
MgJlAQAAWgZdAQAAhAFdAQAADAZdAQAABwFhAQAApQVdAQAAtwJqAQAAdAZdAQAAEQFZAQAAtgVd
AQAA+ghZAQAA9wZdAQAARAFhAQAA4wVdAQAA0ABhAQAAWQVdAQAA8wBhAQAAigVdAQAAzAdlAQAA
ywZdAQAAvAFlAQAALwZdAQAA0gtqAQAATwddAQAA4gtqAQAAZgddAQAA6wJdAQAAoQZdAQAAtgpv
AQAAJAddAQAAMgJlAQAAWgZdAQAAhAFdAQAADAZdAQAAQwhzAQAASAl4AQAAkwJ9AQAAYwuCAQIA
BgADAAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAV
AAIAEAAXAAIAEQAZAAIAEgAbAAIAEwAdAAIAFAAfAAIAFQAhAAIAFgAjAAIAFwAlAAIAGAAnAAIA
GQApAAIAGgArAAIAGwAtAAIAHAAvAAIAHQAxAAIAHgAzAAIAHwA1AAIAIAA3AAIAIQA5AAEAJQA7
AAEAJgA9AAEAJwA/AAEAKABBAAEAKQBDAAEAKgBFAAEAKwBHAAEALABJAAEALQBLAAEALgBNAAEA
LwBPAAEAMABRAAEAMQBTAAEAMgBVAAEAMwBXAAEANABZAAEANQBbAAEANgBdAAEANwBfAAEAOABh
AAEAOQBjAAEAOgBlAAEAOwBnAAEAPABpAAEAPQBrAAEAPgBtAAIASwBvAAIATgBxAAIATwBzAAEA
UABzAAIAUQB1AASAAAABAAAAAAAAAAAAAAAAAHgAAAAEAAAAAAAAAAAAAADBAGYBAAAAAA8AAAAA
AAAAAAAAAMoAmQsAAAAADwAAAAAAAAAAAAAAygDuCwAAAAAPAAAAAAAAAAAAAADKAJ0IAAAAAAQA
AAAAAAAAAAAAAMEAigcAAAAADwAAAAAAAAAAAAAAygDACAAAAAAAAAAAAQAAABoKAAAAAAAAAElE
VFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAw
AElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAAR2V0SW50
MzIAU0NfNGZjNmVmNmY3MDIwNGI0MjgwZmI4YjhlNzViMGMwNDMAR2V0SW50NjQAPE1vZHVsZT4A
Z2V0X0luZnJhc1dPSUQAZ2V0X0VtcGxveWVlSUQAc2V0X0VtcGxveWVlSUQAZ2V0X1dvcmtPcmRl
clR5cGVJRABzZXRfV29ya09yZGVyVHlwZUlEAGdldF9FbXBJRABzZXRfV09JbmZyYXNJRABJbnB1
dElEAEdldE91dHB1dElEAGdldF9JbnZlbnRvcnlJRABzZXRfSW52ZW50b3J5SUQAZ2V0X0NvbXBv
bmVudE1ldGFEYXRhAG1zY29ybGliAGluUmVjAGdldF9EV1Byb2MAc2V0X0RXUHJvYwBJbnB1dHNG
aW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAGdldF9XT0VuZABzZXRfV09FbmQAZGVmYXVsdElu
c3RhbmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBHZXRS
dW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBnZXRfTm90aWNlRGF0ZVRpbWUAc2V0X05vdGljZURhdGVU
aW1lAEdldERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAGdldF9Ib3VybHlSYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdldF9Kb2JDb21wbGV0ZQBz
ZXRfSm9iQ29tcGxldGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1
ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0cmluZwBUb0RlY2ltYWwAR2V0RGVjaW1h
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNGZjNmVmNmY3MDIwNGI0MjgwZmI4YjhlNzViMGMw
NDMuZGxsAGdldF9JbmZyYXNXT0lEX0lzTnVsbABnZXRfRW1wbG95ZWVJRF9Jc051bGwAc2V0X0Vt
cGxveWVlSURfSXNOdWxsAGdldF9Xb3JrT3JkZXJUeXBlSURfSXNOdWxsAHNldF9Xb3JrT3JkZXJU
eXBlSURfSXNOdWxsAGdldF9FbXBJRF9Jc051bGwAc2V0X1dPSW5mcmFzSURfSXNOdWxsAGdldF9J
bnZlbnRvcnlJRF9Jc051bGwAc2V0X0ludmVudG9yeUlEX0lzTnVsbABnZXRfRFdQcm9jX0lzTnVs
bABzZXRfRFdQcm9jX0lzTnVsbABnZXRfV09FbmRfSXNOdWxsAHNldF9XT0VuZF9Jc051bGwAZ2V0
X05vdGljZURhdGVUaW1lX0lzTnVsbABzZXRfTm90aWNlRGF0ZVRpbWVfSXNOdWxsAGdldF9Ib3Vy
bHlSYXRlX0lzTnVsbABnZXRfSm9iQ29tcGxldGVfSXNOdWxsAHNldF9Kb2JDb21wbGV0ZV9Jc051
bGwAZ2V0X1dPQmVnaW5fSXNOdWxsAHNldF9XT0JlZ2luX0lzTnVsbABnZXRfU3BhcmNXT051bWJl
cl9Jc051bGwAc2V0X1NwYXJjV09OdW1iZXJfSXNOdWxsAGdldF9Kb2JOb3Rlc19Jc051bGwAc2V0
X0pvYk5vdGVzX0lzTnVsbABnZXRfV09FcXVpcENvc3RfSXNOdWxsAHNldF9XT0VxdWlwQ29zdF9J
c051bGwAc2V0X1dPTGFib3JDb3N0X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNv
dXJjZU1hbgBHZXRCb29sZWFuAFRpbWVTcGFuAFNjcmlwdE1haW4AZ2V0X1dPQmVnaW4Ac2V0X1dP
QmVnaW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24Ab3BfU3VidHJh
Y3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBn
ZXRfQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24A
Q3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABnZXRfU3Bh
cmNXT051bWJlcgBzZXRfU3BhcmNXT051bWJlcgBJbmNvbWluZzBCdWZmZXIAT3V0Z29pbmcwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9D
b25uZWN0aW9uTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0
cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU0NfNGZjNmVmNmY3MDIwNGI0MjgwZmI4YjhlNzViMGMwNDMuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzRmYzZlZjZmNzAy
MDRiNDI4MGZiOGI4ZTc1YjBjMDQzLlByb3BlcnRpZXMAVmFyaWFibGVzAGdldF9Kb2JOb3RlcwBz
ZXRfSm9iTm90ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdz
AEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAGdldF9Ub3RhbEhvdXJzAEZpbmlzaE91dHB1dHMA
Q3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAZ2V0X0VuZE9mUm93c2V0AFNldEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQAZ2V0X1dPRXF1aXBDb3N0AHNl
dF9XT0VxdWlwQ29zdABzZXRfV09MYWJvckNvc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QASW5jb21pbmcwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1dABBZGRSb3cASW5jb21pbmcw
X1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9NdWx0aXBseQAAgJtJAHMA
TgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0
AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQA
aABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABNJAG4AYwBvAG0AaQBuAGcAMAAA
E08AdQB0AGcAbwBpAG4AZwAwAAAVQwBvAG4AbgBlAGMAdABpAG8AbgAAcVMAQwBfADQAZgBjADYA
ZQBmADYAZgA3ADAAMgAwADQAYgA0ADIAOAAwAGYAYgA4AGIAOABlADcANQBiADAAYwAwADQAMwAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAABgVEe5YUrTR7kEajkR
u7NqAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFpBQcCDRE5CAACETkRSRFJAyAADQUAARFNDQgA
AhFNEU0RTQkgAwESQR0IEkUDBhJBAwYdCAQgAQoIBCABAggEIAEICAUgARFJCAUgARFNCAQgAQ4I
AyAAAgUgAgEIHAcgAgIOEYCRBSABHQgIAwcBCAYAAggSRQ4FIAASgJUFIAASgJkGIAESgJ0OBCAA
ElkIAAESgKERgKUFIAASgKkHIAIBDhKAqQi3elxWGTTgiQiJhF3NgIDMkQMGEhgDBhIcAwYSEAIG
CAMGElEDBhJhAwYSZQMGEiQFIAEBEgwDIAAKAyAACAQgABFJBCAAEU0DIAAOBCABAQoEIAEBAgUg
AQERSQUgAQERTQkgBAEIDhJBEkULIAQBCB0IHRJBEkUFIAEBElEEAAASYQQAABJlBQABARJlBAAA
EiQDAAABAygACgMoAAIDKAAIBCgAEUkEKAARTQMoAA4EKAASWQQIABJhBAgAEmUECAASJAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNGZjNmVm
NmY3MDIwNGI0MjgwZmI4YjhlNzViMGMwNDMAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAMRQAAAAAAAAAAAAAmRQAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAGEUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADs
AwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
TAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA0
AGYAYwA2AGUAZgA2AGYANwAwADIAMAA0AGIANAAyADgAMABmAGIAOABiADgAZQA3ADUAYgAwAGMA
MAA0ADMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQAZgBjADYAZQBmADYAZgA3ADAA
MgAwADQAYgA0ADIAOAAwAGYAYgA4AGIAOABlADcANQBiADAAYwAwADQAMwAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANABmAGMANgBlAGYA
NgBmADcAMAAyADAANABiADQAMgA4ADAAZgBiADgAYgA4AGUANwA1AGIAMABjADAANAAzAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQAZgBjADYAZQBmADYA
ZgA3ADAAMgAwADQAYgA0ADIAOAAwAGYAYgA4AGIAOABlADcANQBiADAAYwAwADQAMwAAADQACAAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMA
cwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAODUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4fc6ef6f70204b4280fb8b8e75b0c043</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F7</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Connections[Connection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0]"
                  hasSideEffects="true"
                  name="Incoming0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[InfrasWOID]"
                      cachedDataType="i8"
                      cachedName="InfrasWOID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[InfrasWOID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[SparcWONumber]"
                      cachedDataType="i8"
                      cachedName="SparcWONumber"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[SparcWONumber]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[InventoryID]"
                      cachedDataType="i4"
                      cachedName="InventoryID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[InventoryID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[WorkOrderTypeID]"
                      cachedDataType="i4"
                      cachedName="WorkOrderTypeID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WorkOrderTypeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[WOBegin]"
                      cachedDataType="date"
                      cachedName="WOBegin"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOBegin]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[WOEnd]"
                      cachedDataType="date"
                      cachedName="WOEnd"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOEnd]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[WOEquipCost]"
                      cachedDataType="cy"
                      cachedName="WOEquipCost"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOEquipCost]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[JobComplete]"
                      cachedDataType="bool"
                      cachedName="JobComplete"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[JobComplete]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[JobNotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="JobNotes"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[JobNotes]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[NoticeDateTime]"
                      cachedDataType="date"
                      cachedName="NoticeDateTime"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[NoticeDateTime]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[DWProc]"
                      cachedDataType="bool"
                      cachedName="DWProc"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[DWProc]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[EmpID]"
                      cachedDataType="i4"
                      cachedName="EmpID"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output].Columns[EmpID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0].Columns[HourlyRate]"
                      cachedDataType="cy"
                      cachedName="HourlyRate"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output].Columns[HourlyRate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0]"
                  hasSideEffects="true"
                  name="Outgoing0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOInfrasID]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOInfrasID]"
                      name="WOInfrasID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[SparcWONumber]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[SparcWONumber]"
                      name="SparcWONumber" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[InventoryID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[InventoryID]"
                      name="InventoryID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WorkOrderTypeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WorkOrderTypeID]"
                      name="WorkOrderTypeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOBegin]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOBegin]"
                      name="WOBegin" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEnd]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEnd]"
                      name="WOEnd" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEquipCost]"
                      dataType="cy"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEquipCost]"
                      name="WOEquipCost" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOLaborCost]"
                      dataType="cy"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOLaborCost]"
                      name="WOLaborCost" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobComplete]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobComplete]"
                      name="JobComplete" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="240"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobNotes]"
                      name="JobNotes" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[NoticeDateTime]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[NoticeDateTime]"
                      name="NoticeDateTime" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[DWProc]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[DWProc]"
                      name="DWProc" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\CreateWorkOrders"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="CreateWorkOrders"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="42">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e289deb9f7a8409899075b32918d469d.Properties.Settings.get_Default():SC_e289deb9f7a8409899075b32918d469d.Properties.Sett" +
    "ings")]

namespace SC_e289deb9f7a8409899075b32918d469d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_e289deb9f7a8409899075b32918d469d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_e289deb9f7a8409899075b32918d469d</msb:DisplayName>
    <msb:ProjectId>{F20A72AD-1571-42DD-9093-3A7312DC4E9F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_e289deb9f7a8409899075b32918d469d.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="CustomerWorkOrder.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="InfrastructureWorkOrder.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[WOCustomerFact.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_e289deb9f7a8409899075b32918d469d
{
    class WOCustomerFact
    {
        public int customer_id { get; set; }
        public int employee_id { get; set; }
        public int work_order_type_id { get; set; }
        public int wo_total_hours { get; set; }
        public int wo_total_mins { get; set; }
        public decimal wo_equip_cost { get; set; }
        public bool job_complete { get; set; }
        public int hours_note_to_start { get; set; }
        public String meter_name { get; set; }
        public String meter_type { get; set; }
        public String meter_model_number { get; set; }
        public String conn_type_name { get; set; }

    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e289deb9f7a8409899075b32918d469d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e289deb9f7a8409899075b32918d469d")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public CustomerWOBuffer CustomerWOBuffer;

    public InfrasWOBuffer InfrasWOBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != CustomerWOBuffer)
        {
            CustomerWOBuffer.SetEndOfRowset();
            CustomerWOBuffer = null;
        }

        if (null != InfrasWOBuffer)
        {
            InfrasWOBuffer.SetEndOfRowset();
            InfrasWOBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"CustomerWO"))
            {
                CustomerWOBuffer = new CustomerWOBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"InfrasWO"))
            {
                InfrasWOBuffer = new InfrasWOBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[WOInfrasFact.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SC_e289deb9f7a8409899075b32918d469d
{
    class WOInfrasFact
    {
        public int inventory_id { get; set; }
        public int employee_id { get; set; }
        public int work_order_type_id { get; set; }
        public int wo_total_hrs { get; set; }
        public int wo_total_mins { get; set; }
        public decimal wo_equip_cost { get; set; }
        public bool job_complete { get; set; }
        public int hours_note_to_start { get; set; }
        public String infras_name { get; set; }
        public String infras_type { get; set; }
        public String inventory_name { get; set; }

    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e289deb9f7a8409899075b32918d469d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e289deb9f7a8409899075b32918d469d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e289deb9f7a8409899075b32918d469d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e289deb9f7a8409899075b32918d469d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e289deb9f7a8409899075b32918d469d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class CustomerWOBuffer: ScriptBuffer

{
    public CustomerWOBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 CustWOID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CustWOID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 SparcWONumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SparcWONumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 CustomerID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CustomerID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EmployeeID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EmployeeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WorkOrderTypeID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool WorkOrderTypeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOBegin
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WOBegin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOEnd
    {
        set
        {
            this[6] = value;
        }
    }
    public bool WOEnd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WOEquipCost
    {
        set
        {
            this[7] = value;
        }
    }
    public bool WOEquipCost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean JobComplete
    {
        set
        {
            this[8] = value;
        }
    }
    public bool JobComplete_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String JobNotes
    {
        set
        {
            this[9] = value;
        }
    }
    public bool JobNotes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 MeterModelID
    {
        set
        {
            this[10] = value;
        }
    }
    public bool MeterModelID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime NoticeDateTime
    {
        set
        {
            this[11] = value;
        }
    }
    public bool NoticeDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean DWProc
    {
        set
        {
            this[12] = value;
        }
    }
    public bool DWProc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class InfrasWOBuffer: ScriptBuffer

{
    public InfrasWOBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 InfrasWOID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool InfrasWOID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 SparcWONumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool SparcWONumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 InventoryID
    {
        set
        {
            this[2] = value;
        }
    }
    public bool InventoryID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 EmployeeID
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EmployeeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WorkOrderTypeID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool WorkOrderTypeID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOBegin
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WOBegin_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime WOEnd
    {
        set
        {
            this[6] = value;
        }
    }
    public bool WOEnd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WOEquipCost
    {
        set
        {
            this[7] = value;
        }
    }
    public bool WOEquipCost_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean JobComplete
    {
        set
        {
            this[8] = value;
        }
    }
    public bool JobComplete_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String JobNotes
    {
        set
        {
            this[9] = value;
        }
    }
    public bool JobNotes_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime NoticeDateTime
    {
        set
        {
            this[10] = value;
        }
    }
    public bool NoticeDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean DWProc
    {
        set
        {
            this[11] = value;
        }
    }
    public bool DWProc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Diagnostics;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    private Random randomGenerator = new Random();

    // Function to return the correct WOBegin
    private DateTime ReturnRightWOBegin(DateTime inBegin)
    {
        //String strSource = "CreateNewOutputRows:ReturnRightWOBegin";

        // inBegin is the beginning of the first record (which is not overwritten) next begin - this - should be the day after
        int[] monthDays = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }; // 0-11 (month# -1)
        /* jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec */
        /*  0    1    2    3    4    5    6    7    8    9    10   11 */

        // deconstruct inBegin
        int year = inBegin.Year;
        int month = inBegin.Month;
        int day = inBegin.Day;
        //int hour = inBegin.Hour;
        int hour = randomGenerator.Next(6, 10);
        int minutes = randomGenerator.Next(1,59);
        int seconds = 0;

        int idx = month - 1;
        if (idx < 0) idx = 0;
        int daysallowed = monthDays[idx];

        day = day + 1;
        if (day > daysallowed)
        {
            day = 1;
            month += 1;
            if (month > 12)
            {
                month = 1;
                year += 1;
            }
        }

        // create new WOBegin datetime for new record
        DateTime beginDate = new DateTime(year, month, day, hour, minutes, seconds);

        return beginDate;
    }

    // Function to return the correct WOEnd
    private DateTime ReturnRightWOEnd(bool jobComplete, bool isCust, DateTime inBegin)
    {
        //String strSource = "CreateNewOutputRows:ReturnRightWOEnd";

        // deconstruct inBegin
        int year = inBegin.Year;
        int month = inBegin.Month;
        int day = inBegin.Day;
        int hour = inBegin.Hour;
        int minutes = randomGenerator.Next(1,59);
        int seconds = 0;
        int holdhour = 0;

        if (jobComplete)
        {
            if (isCust)
            {
                holdhour = hour + randomGenerator.Next(1, 3);
            }
            else // infras
            {
                holdhour = hour + randomGenerator.Next(1, 6);
            }
        }
        else
        {
            holdhour = hour + randomGenerator.Next(1, 8);
        }

        // create new WOEnd datetime for new record
        DateTime endDate = new DateTime(year, month, day, holdhour, minutes, seconds);

        return endDate;
    }

    public override void CreateNewOutputRows()
    {
        // initializations
        int startCustSPARCWONumber = 11000000;  //Starting work order number for SPARC Customer WO Numbers
        int startInfraSPARCWONumber = 320000;   //Starting work order number for SPARC Infrastructure WO Numbers
        int startCustWONumber = 1;      // starting ID for generated customer work orders (usu 1)
        int startInfraWONumber = 1;       // starting ID for generated infrastructure work orders (usu 1)
        /*****NOTE: genCustWorkOrders Should be larger than Infrastructure work orders
                    because infrastructure borrows from some initialized cust fields */
        int genCustWorkOrders = 180000;     // number of customer work orders to generate 
        int genInfWorkOrders = 4600;        // number of infrastructure work orders to generate     
        int bucketCustIDList = genCustWorkOrders;  // for clarity
        int bucketInfraIDList = genInfWorkOrders;

        DateTime genDateBegin = new DateTime(2018, 1, 1, 1, 15, 0);  // No accounts begin before Jan 09, 2018
        DateTime genDateEnd = new DateTime(2022, 7, 15, 8, 15, 0);
        TimeSpan theSpan = genDateEnd - genDateBegin;
        int costMin = 20;
        int costMax = 500;
        int infracostMin = 50;
        int infracostMax = 2000;

        // Creating random array for EmpIDs and CustIDs for work orders using 1 - 100
        int[] EmpIDbucket = new int[bucketCustIDList];
        int[] CustIDbucket = new int[bucketCustIDList];
        int[] WorkOrderIDbucket = new int[bucketCustIDList];
        DateTime[] dateBucket = new DateTime[bucketCustIDList];
        decimal[] costBucket = new decimal [bucketCustIDList];
        int[] MeterModelIDBucket = new int[bucketCustIDList];
        /* infrastructure only buckets */
        int[] InvIDbucket = new int[bucketInfraIDList];             
        int[] WOIDInfrabucket = new int[bucketInfraIDList];         
        decimal[] infracostBucket = new decimal[bucketInfraIDList];  

        /* create randomness */
        for ( int i=0; i < genCustWorkOrders; i++)
        {
            //reset normal costmin values
            costMin = 20; infracostMin = 50; costMax = 500; infracostMax = 2000;
            EmpIDbucket[i] = randomGenerator.Next(1, 50);  // Employee IDs 1 - 50 exist
            /*int passRandom = randomGenerator.Next(96, 194); // because there was an issue passing it directly into the list
            CustIDbucket[i] = passRandom;     // only using residential customers for customer run (no business, govt, industrial) */
            CustIDbucket[i] = randomGenerator.Next(1, 194); //now using all available customers
            WorkOrderIDbucket[i] = randomGenerator.Next(1, 14);  // residential work order types from 1- 14
            int newYears = randomGenerator.Next(0, 3);      // setup years, months, days, hours, mins
            int newMonths = randomGenerator.Next(0, 12);
            double newDays = randomGenerator.Next(0, 28);   // shortcut to evade bombing February (choose from 0 - 28 days to add)
            double newHours = randomGenerator.Next(1, 24);
            double newMins = randomGenerator.Next(1, 60);
            dateBucket[i] = genDateBegin.AddYears(newYears).AddMonths(newMonths).AddDays(newDays).AddHours(newHours).AddMinutes(newMins);
            // add variation for Jan, May, July
            if((newMonths == 1) || (newMonths == 5) || (newMonths == 7)) { costMin = 150; costMax = 1650;  infracostMin = 100; infracostMax = 5500; }
            costBucket[i] = randomGenerator.Next(costMin, costMax);
            MeterModelIDBucket[i] = randomGenerator.Next(3, 6);     // use the digital AMR and the SMART meters for the residential areas
            // infrastructure specific
            if (i < genInfWorkOrders)
            {
                InvIDbucket[i] = randomGenerator.Next(1, 98);        // Inventory IDs from 1 - 98
                WOIDInfrabucket[i] = randomGenerator.Next(15, 24);   // infrastructure work orders from 15 - 24
                infracostBucket[i] = randomGenerator.Next(infracostMin, infracostMax);
            }
        }

        /* Generate Customer Work Orders */
        for (int j = 0; j < genCustWorkOrders; j++)
        {
            CustomerWOBuffer.AddRow();
            CustomerWOBuffer.SparcWONumber = startCustSPARCWONumber + j;
            CustomerWOBuffer.CustWOID = startCustWONumber + j;
            CustomerWOBuffer.CustomerID = CustIDbucket[j];
            CustomerWOBuffer.EmployeeID = EmpIDbucket[j];
            CustomerWOBuffer.WorkOrderTypeID = WorkOrderIDbucket[j];
            DateTime goodBeginDate = ReturnRightWOBegin(dateBucket[j]);
            CustomerWOBuffer.WOBegin = goodBeginDate;
            CustomerWOBuffer.WOEnd = ReturnRightWOEnd(true, true, goodBeginDate); // job complete, customer, begin datetime
            CustomerWOBuffer.WOEquipCost = costBucket[j];
            CustomerWOBuffer.JobComplete = true;
            CustomerWOBuffer.JobNotes = null;
            CustomerWOBuffer.MeterModelID = MeterModelIDBucket[j];
            double noteDays = (randomGenerator.Next(0, 8)) * (-1);
            double noteHrs = (randomGenerator.Next(1, 24)) * (-1);
            double noteMins = (randomGenerator.Next(1, 60)) * (-1);
            DateTime passDate2 = (dateBucket[j]).AddDays(noteDays).AddHours(noteHrs).AddMinutes(noteMins);
            CustomerWOBuffer.NoticeDateTime = passDate2;
            CustomerWOBuffer.DWProc = false; // Hardcoded because this would be the correct value of the program generated record.
            /*
            Debug.WriteLine(strSource + "@@@@@@@@====>>:  | " + "WOCustomerID=" + (startCustWONumber + j) + " | CustomerID=" + CustIDbucket[j] + 
                " | EmployeeID=" + EmpIDbucket[j] + " | WorkOrderTypeID=" + WorkOrderIDbucket[j] + 
                " || WOBegin=>WOEnd: " + dateBucket[j] + " ==> " + passDate + " || WOEquipCost=" + costBucket[j] + " | JobComplete=true" + " | JobNotes = null" +
                " | MeterModelID=" + MeterModelIDBucket[j] + " | custMeterIDent=null | NoticeDateTime=" + passDate2);
            */
        }

        /* Generate Infrastructure Work Orders */
        for (int j = 0; j < genInfWorkOrders; j++)
        {
            InfrasWOBuffer.AddRow();
            InfrasWOBuffer.SparcWONumber = startInfraSPARCWONumber + j;
            InfrasWOBuffer.InfrasWOID = startInfraWONumber + j;
            InfrasWOBuffer.InventoryID = InvIDbucket[j];
            InfrasWOBuffer.EmployeeID = EmpIDbucket[j];
            InfrasWOBuffer.WorkOrderTypeID = WOIDInfrabucket[j];
            DateTime goodBeginDate = ReturnRightWOBegin(dateBucket[j]);
            InfrasWOBuffer.WOBegin = goodBeginDate;
            InfrasWOBuffer.WOEnd = ReturnRightWOEnd(true, false, goodBeginDate);    // job complete, customer, begin datetime
            InfrasWOBuffer.WOEquipCost = infracostBucket[j];
            InfrasWOBuffer.JobComplete = true;
            InfrasWOBuffer.JobNotes = null;
            double noteDays = (randomGenerator.Next(0, 1)) * (-1);
            double noteHrs = (randomGenerator.Next(1, 24)) * (-1);
            double noteMins = (randomGenerator.Next(1, 60)) * (-1);
            DateTime passDate2 = (dateBucket[j]).AddDays(noteDays).AddHours(noteHrs).AddMinutes(noteMins);
            InfrasWOBuffer.NoticeDateTime = passDate2;
            InfrasWOBuffer.DWProc = false; // Hardcoded because this would be the correct value of the program generated record.
            /*
            Debug.WriteLine(strSource + "@@@@@@@@====>>:" + "WOInventoryID=" + (startInfraWONumber+j) + " | InventoryID=" + InvIDbucket[j] +
                " | EmployeeID=" + EmpIDbucket[j] + " | WorkOrderTypeID=" + WorkOrderIDbucket[j] +
                " || WOBegin=>WOEnd: " + dateBucket[j] + " ==> " + passDate + " || WOEquipCost=" + costBucket[j] + " | JobComplete=true" + " | JobNotes = null" +
                " | NoticeDateTime=" + passDate2);
            */
        }

         //Debug.WriteLine("@@@@@@@@@@ Process Complete @@@@@@@@@@");

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[CustomerWorkOrder.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Numerics;

namespace SC_e289deb9f7a8409899075b32918d469d
{   // available for future use
    class CustomerWorkOrder
    {
        public int customer_wo_id { get; set; }
        public BigInteger sparc_wo_number { get; set; }
        public int customer_id { get; set; }
        public int employee_id { get; set; }
        public int work_order_type_id { get; set; }
        public DateTime wo_begin { get; set; }
        public DateTime wo_end { get; set; }
        public decimal wo_equip_cost { get; set; }
        public bool job_complete { get; set; }
        public String job_notes { get; set; }
        public int meter_model_id { get; set; }
        public DateTime notice_datetime { get; set; }
        public bool dw_proc { get; set; }

    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[InfrastructureWorkOrder.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Numerics;

namespace SC_e289deb9f7a8409899075b32918d469d
{
    // available for future use
    class InfrastructureWorkOrder
    {
        public int infras_wo_id { get; set; }
        public BigInteger sparc_wo_number { get; set; }
        public int inventory_id { get; set; }
        public int employee_id { get; set; }
        public int work_order_type_id { get; set; }
        public DateTime wo_begin { get; set; }
        public DateTime wo_end { get; set; }
        public decimal wo_equip_cost { get; set; }
        public bool job_complete { get; set; }
        public String Job_notes { get; set; }
        public DateTime notice_datetime { get; set; }
        public bool dw_proc { get; set; }

    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e289deb9f7a8409899075b32918d469d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{606D1FA3-004D-4F6B-AEF4-3A44A558CD68}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e289deb9f7a8409899075b32918d469d</RootNamespace>
    <AssemblyName>SC_e289deb9f7a8409899075b32918d469d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="CustomerWorkOrder.cs" />
    <Compile Include="InfrastructureWorkOrder.cs" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e289deb9f7a8409899075b32918d469d.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN2f+WIAAAAAAAAAAOAAIiALATAAADgAAAAIAAAAAAAA3lUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIxVAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFDYAAAAgAAAAOAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA6AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAQAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
VQAAAAAAAEgAAAACAAUA6CsAAOwoAAABAAAAAAAAANRUAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAYAhgAAAAEAABEfDI0gAAAB
JdAkAAAEKBIAAAoPASgTAAAKCg8BKBQAAAoLDwEoFQAACgwCewEAAAQcHwpvFgAACg0CewEAAAQX
HztvFgAAChMEFhMFBxdZEwYRBhYvAxYTBhEGlBMHCBdYDAgRBzERFwwHF1gLBx8MMQYXCwYXWAoG
BwgJEQQRBXMXAAAKKgAAEzAGAIIAAAACAAARDwMoEwAACgoPAygUAAAKCw8DKBUAAAoMDwMoGAAA
Cg0CewEAAAQXHztvFgAAChMEFhMFFhMGAywpBCwTCQJ7AQAABBcZbxYAAApYEwYrJAkCewEAAAQX
HG8WAAAKWBMGKxEJAnsBAAAEFx5vFgAAClgTBgYHCBEGEQQRBXMXAAAKKgAAEzAIAO4EAAADAAAR
IMDYpwAKIADiBAALFwwXDSAgvwIAEwQg+BEAABMFEQQRBRMGEgcg4gcAABcXFx8PFigXAAAKIOYH
AAAdHw8eHw8WcxcAAAoRBygZAAAKJh8UEwgg9AEAABMJHzITCiDQBwAAEwsljSAAAAETDCWNIAAA
ARMNJY0gAAABEw4ljQ8AAAETDyWNEAAAARMQjSAAAAETEREGjSAAAAETEhEGjSAAAAETExEGjRAA
AAETFBYTFTiJAQAAHxQTCB8yEwog9AEAABMJINAHAAATCxEMERUCewEAAAQXHzJvFgAACp4RDREV
AnsBAAAEFyDCAAAAbxYAAAqeEQ4RFQJ7AQAABBcfDm8WAAAKngJ7AQAABBYZbxYAAAoTFgJ7AQAA
BBYfDG8WAAAKExcCewEAAAQWHxxvFgAACmwTGAJ7AQAABBcfGG8WAAAKbBMZAnsBAAAEFx88bxYA
AApsExoRDxEVEgcRFigaAAAKExsSGxEXKBsAAAoTGxIbERgoHAAAChMbEhsRGSgdAAAKExsSGxEa
KB4AAAqkDwAAAREXFy4KERcbLgURFx0zGSCWAAAAEwggcgYAABMJH2QTCiB8FQAAEwsREBEVAnsB
AAAEEQgRCW8WAAAKKB8AAAqkEAAAARERERUCewEAAAQZHG8WAAAKnhEVEQUvRBESERUCewEAAAQX
H2JvFgAACp4RExEVAnsBAAAEHw8fGG8WAAAKnhEUERUCewEAAAQRChELbxYAAAooHwAACqQQAAAB
ERUXWBMVERURBD9u/v//FhMcOEkBAAACewQAAARvIgAABgJ7BAAABAYRHFhqbwoAAAYCewQAAAQI
ERxYam8IAAAGAnsEAAAEEQ0RHJRvDAAABgJ7BAAABBEMERyUbw4AAAYCewQAAAQRDhEclG8QAAAG
AhEPERyjDwAAASgDAAAGEx0CewQAAAQRHW8SAAAGAnsEAAAEAhcXER0oBAAABm8UAAAGAnsEAAAE
ERARHKMQAAABbxYAAAYCewQAAAQXbxgAAAYCewQAAAQUbxoAAAYCewQAAAQREREclG8cAAAGAnsB
AAAEFh5vFgAAChVabBMeAnsBAAAEFx8YbxYAAAoVWmwTHwJ7AQAABBcfPG8WAAAKFVpsEyARDxEc
jw8AAAERHigcAAAKExsSGxEfKB0AAAoTGxIbESAoHgAAChMhAnsEAAAEESFvHgAABgJ7BAAABBZv
IAAABhEcF1gTHBEcEQQ/rv7//xYTIjg5AQAAAnsFAAAEbz4AAAYCewUAAAQHESJYam8oAAAGAnsF
AAAECREiWGpvJgAABgJ7BQAABBESESKUbyoAAAYCewUAAAQRDBEilG8sAAAGAnsFAAAEERMRIpRv
LgAABgIRDxEiow8AAAEoAwAABhMjAnsFAAAEESNvMAAABgJ7BQAABAIXFhEjKAQAAAZvMgAABgJ7
BQAABBEUESKjEAAAAW80AAAGAnsFAAAEF282AAAGAnsFAAAEFG84AAAGAnsBAAAEFhdvFgAAChVa
bBMkAnsBAAAEFx8YbxYAAAoVWmwTJQJ7AQAABBcfPG8WAAAKFVpsEyYRDxEijw8AAAERJCgcAAAK
ExsSGxElKB0AAAoTGxIbESYoHgAAChMnAnsFAAAEESdvOgAABgJ7BQAABBZvPAAABhEiF1gTIhEi
EQU/vv7//ypKAnMgAAAKfQEAAAQCKEEAAAYqKgIDBAUoIQAACio6AhYDjCUAAAEoIgAACipaAywI
AhYoIwAACipyAQAAcHMkAAAKejoCFwOMJQAAASgiAAAKKloDLAgCFygjAAAKKnIBAABwcyQAAAp6
OgIYA4wgAAABKCIAAAoqWgMsCAIYKCMAAAoqcgEAAHBzJAAACno6AhkDjCAAAAEoIgAACipaAywI
AhkoIwAACipyAQAAcHMkAAAKejoCGgOMIAAAASgiAAAKKloDLAgCGigjAAAKKnIBAABwcyQAAAp6
OgIbA4wPAAABKCIAAAoqWgMsCAIbKCMAAAoqcgEAAHBzJAAACno6AhwDjA8AAAEoIgAACipaAywI
AhwoIwAACipyAQAAcHMkAAAKejoCHQOMEAAAASgiAAAKKloDLAgCHSgjAAAKKnIBAABwcyQAAAp6
OgIeA4wnAAABKCIAAAoqWgMsCAIeKCMAAAoqcgEAAHBzJAAACnoqAh8JAygiAAAKKl4DLAkCHwko
IwAACipyAQAAcHMkAAAKej4CHwoDjCAAAAEoIgAACipeAywJAh8KKCMAAAoqcgEAAHBzJAAACno+
Ah8LA4wPAAABKCIAAAoqXgMsCQIfCygjAAAKKnIBAABwcyQAAAp6PgIfDAOMJwAAASgiAAAKKl4D
LAkCHwwoIwAACipyAQAAcHMkAAAKeh4CKCUAAAoqHgIoJgAACioeAignAAAKKj4CHwoDjA8AAAEo
IgAACio+Ah8LA4wnAAABKCIAAAoqfgIoKAAACgICc0YAAAZ9AgAABAICc0gAAAZ9AwAABCoGKtYC
ewQAAAQsEgJ7BAAABG8jAAAGAhR9BAAABAJ7BQAABCwSAnsFAAAEbz8AAAYCFH0FAAAEKgAAABMw
BQBzAAAABAAAERYKK1gEBpQOBHKeAABwKCkAAAozGQIFBpoCBAaUKCoAAAoOBHMHAAAGfQQAAAQE
BpQOBHK0AABwKCkAAAozGQIFBpoCBAaUKCoAAAoOBHMlAAAGfQUAAAQGF1gKBgMypAJvRQAABgJv
QgAABgIoQwAABio6AigrAAAKAgN9BgAABCqCAnsGAAAEbywAAApvLQAACnLGAABwby4AAApvLwAA
Cio6AigrAAAKAgN9BwAABCoeAnsIAAAEKiICA30IAAAEKh4CewkAAAQqIgIDfQkAAAQqHgJ7CgAA
BCoiAgN9CgAABCoeAnsLAAAEKiICA30LAAAEKh4CewwAAAQqIgIDfQwAAAQqHgJ7DQAABCoiAgN9
DQAABCoeAnsOAAAEKiICA30OAAAEKh4Cew8AAAQqIgIDfQ8AAAQqHgJ7EAAABCoiAgN9EAAABCoe
AnsRAAAEKiICA30RAAAEKh4CexIAAAQqIgIDfRIAAAQqHgJ7EwAABCoiAgN9EwAABCoeAnsUAAAE
KiICA30UAAAEKh4CKCsAAAoqHgJ7FQAABCoiAgN9FQAABCoeAnsWAAAEKiICA30WAAAEKh4CexcA
AAQqIgIDfRcAAAQqHgJ7GAAABCoiAgN9GAAABCoeAnsZAAAEKiICA30ZAAAEKh4CexoAAAQqIgID
fRoAAAQqHgJ7GwAABCoiAgN9GwAABCoeAnscAAAEKiICA30cAAAEKh4Cex0AAAQqIgIDfR0AAAQq
HgJ7HgAABCoiAgN9HgAABCoeAnsfAAAEKiICA30fAAAEKh4CeyAAAAQqIgIDfSAAAAQqrn4hAAAE
LR5y3AAAcNAKAAACKDAAAApvMQAACnMyAAAKgCEAAAR+IQAABCoafiIAAAQqHgKAIgAABCoafiMA
AAQqHgIoMwAACiouc4IAAAaAIwAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAADoFAAAI34AAFQVAACIDwAAI1N0cmluZ3MAAAAA3CQAAFABAAAjVVMALCYAABAAAAAjR1VJ
RAAAADwmAACwAgAAI0Jsb2IAAAAAAAAAAgAAAVeVoiEJAwAAAPoBMwAWAAABAAAALQAAAA0AAAAk
AAAAgwAAAFwAAAAzAAAAXAAAAAEAAAAEAAAABwAAAE8AAABpAAAAAQAAAAEAAAAHAAAAAQAAAAEA
AAAAAFcIAQAAAAAABgBGB9MMBgDaB9MMBgCSBsAMDwBHDQAABgC/BosKBgApB4sKBgAKB4sKBgDB
B4sKBgBmB4sKBgB/B4sKBgDWBosKBgDxBhUICgCaB5wFBgDiCdsJBgBrBdsJBgA5CNsJCgDtC5wF
DgDeC5wFCgDyCpwFCgDCDpwFBgB2DtsJEgBWAC8MBgBaBtMMFgAkDLAMBgB1BsAMBgD+C/MMBgDm
CmcKGgAHBkEIGgCmBkEIGgDvBVIKBgC9BdsJBgBvANsJBgA0DtMMBgB1D9sJBgAPBdsJBgD9CdsJ
BgC2ANsJBgDMCtsJBgD1CdsJHgABAFcMHgAaAFcMHgA9AFcMBgDCBdsJBgAiBdsJBgB/D4sKAAAA
ANkAAAAAAAEAAQABABAABgoAABQAAQABAAEAEAC+CwAARQACAAcAAQAQAM8LAABFAAIAJQABABAA
pA4AAFEAAgBBAAEAEAAXDgAAVQAGAEYAAQAQAIUNAABVAAcASAAAABAArAu+AVUACABJAAAAEACU
C74BVQAVAGQAAAAQAPoMVg1VACEAfQAAARAABA5WDXkAIwCBAAABAADiAAAAVQAkAIQAEwEAALwA
AAB9ACUAhAABAIAMDQEGABcOEQEGAIUNFQEGAL4LGQEGAM8LHQEBALIOIQEBALIOIQEBAG4DJQEB
AFgEKAEBAKwDJQEBAA0DJQEBACoDJQEBAD4ELAEBAOcDLAEBAK8EMAEBACAENAEBAJQENwEBAE4D
JQEBAP8DLAEBAPQCNAEBAI4DJQEBAFgEKAEBAMkDJQEBAA0DJQEBACoDJQEBAD4ELAEBAOcDLAEB
AK8EMAEBACAENAEBAHkENwEBAP8DLAEBAPQCNAERAOkJOgERAN8FPgERAP8EQgEzAXUARgFQIAAA
AADGAPgHBgABAFggAAAAAMYAAwgGAAEAYCAAAAAAgQAdCkoBAQD0IAAAAACBANgEUQECAIQhAAAA
AMYAWg4GAAUAfiYAAAAAhhiQDAYABQCRJgAAAACGGJAMpwAFAJwmAAAAAIYIEAFaAQgAqyYAAAAA
hgiVCF8BCQDCJgAAAACGCFoLWgEKANEmAAAAAIYIhglfAQsA6CYAAAAAhghRAQEADAD3JgAAAACG
CPIIXwENAA4nAAAAAIYIHQEBAA4AHScAAAAAhgipCF8BDwA0JwAAAACGCCwBAQAQAEMnAAAAAIYI
vwhfAREAWicAAAAAhggRCmQBEgBpJwAAAACGCHMJXwETAIAnAAAAAIYIzgRkARQAjycAAAAAhggx
CV8BFQCmJwAAAACGCO8OagEWALUnAAAAAIYIswlfARcAzCcAAAAAhggcBl8BGADbJwAAAACGCFwJ
XwEZAPInAAAAAIYIjw0QABoA/ScAAAAAhgifCV8BGwAVKAAAAACGCEABAQAcACUoAAAAAIYI2ghf
AR0APSgAAAAAhghhBWQBHgBNKAAAAACGCEIJXwEfAGUoAAAAAIYImwFfASAAdSgAAAAAhggfCV8B
IQCNKAAAAACGAFwPBgAiAJUoAAAAAIYAfQ4GACIAnSgAAAAAhgCADrcAIgCRJgAAAACGGJAMpwAi
AJwmAAAAAIYIAQFaASUAqyYAAAAAhgh/CF8BJgDCJgAAAACGCFoLWgEnANEmAAAAAIYIhglfASgA
6CYAAAAAhghsAQEAKQD3JgAAAACGCAgJXwEqAA4nAAAAAIYIHQEBACsAHScAAAAAhgipCF8BLAA0
JwAAAACGCCwBAQAtAEMnAAAAAIYIvwhfAS4AWicAAAAAhggRCmQBLwBpJwAAAACGCHMJXwEwAIAn
AAAAAIYIzgRkATEAjycAAAAAhggxCV8BMgCmJwAAAACGCO8OagEzALUnAAAAAIYIswlfATQAzCcA
AAAAhggcBl8BNQDbJwAAAACGCFwJXwE2APInAAAAAIYIjw0QADcA/ScAAAAAhgifCV8BOAClKAAA
AACGCGEFZAE5ACUoAAAAAIYIQglfAToAtSgAAAAAhgibAV8BOwBNKAAAAACGCB8JXwE8AI0oAAAA
AIYAXA8GAD0AlSgAAAAAhgB9DgYAPQCdKAAAAACGAIAOtwA9AMUoAAAAAIYYkAwGAD0A5SgAAAAA
xgFMDgYAPQDnKAAAAACBAOIBBgA9ACApAAAAAMYASw9wAT0A5SgAAAAAxgFaDgYAQQCfKQAAAACG
GJAMfAFBAK4pAAAAAIYIvQrfAEIAzykAAAAAhhiQDHwBQgDeKQAAAACGCGoCMABDAOYpAAAAAIYI
fQIBAEMA7ykAAAAAhghsC4IBRAD3KQAAAACGCIALhwFEAAAqAAAAAIYIsgIwAEUACCoAAAAAhgjC
AgEARQARKgAAAACGCPYBMABGABkqAAAAAIYIBgIBAEYAIioAAAAAhggWAjAARwAqKgAAAACGCC0C
AQBHADMqAAAAAIYIOAqNAUgAOyoAAAAAhghFCmQBSABEKgAAAACGCOkEjQFJAEwqAAAAAIYI9ARk
AUkAVSoAAAAAhgggD5IBSgBdKgAAAACGCDIPagFKAGYqAAAAAIYIOAa3AEsAbioAAAAAhghJBl8B
SwB3KgAAAACGCLgNlwFMAH8qAAAAAIYIxg0QAEwAiCoAAAAAhghEAjAATQCQKgAAAACGCFcCAQBN
AJkqAAAAAIYIdAWNAU4AoSoAAAAAhgiIBWQBTgCqKgAAAACGCKYBtwBPALIqAAAAAIYIsgFfAU8A
uyoAAAAAhhiQDAYAUADDKgAAAACGCJACMABQAMsqAAAAAIYIoQIBAFAA1CoAAAAAhghsC4IBUQDc
KgAAAACGCIALhwFRAOUqAAAAAIYI0gIwAFIA7SoAAAAAhgjjAgEAUgD2KgAAAACGCPYBMABTAP4q
AAAAAIYIBgIBAFMABysAAAAAhggWAjAAVAAPKwAAAACGCC0CAQBUABgrAAAAAIYIOAqNAVUAICsA
AAAAhghFCmQBVQApKwAAAACGCOkEjQFWADErAAAAAIYI9ARkAVYAOisAAAAAhgggD5IBVwBCKwAA
AACGCDIPagFXAEsrAAAAAIYIOAa3AFgAUysAAAAAhghJBl8BWABcKwAAAACGCJwNlwFZAGQrAAAA
AIYIqg0QAFkAbSsAAAAAhgh0BY0BWgB1KwAAAACGCIgFZAFaAH4rAAAAAIYIpgG3AFsAhisAAAAA
hgiyAV8BWwC7KgAAAACGGJAMBgBcALsqAAAAAIMYkAwGAFwAjysAAAAAkwj6C5sBXAC7KwAAAACT
CMcFoAFcAMIrAAAAAJMI0wWlAVwAyisAAAAAlgiYDqsBXQDRKwAAAACGGJAMBgBdANkrAAAAAJEY
lgywAV0AAAABADAKAAABACwGAAACAEQPAAADADAKAAABAPMLAAACAN8NAAADAAALAAABAA8IAAAB
AA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8I
AAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAAB
AA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAPMLAAACAN8NAAADAAALAAABAA8I
AAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAAB
AA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8I
AAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAFIOAAACAKYMAAADACwOAAAEAAALAAABAMgOAAAB
AMgOAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8I
AAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAAB
AA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8IAAABAA8ICQCQDAEAEQCQDAYA
GQCQDAoAKQCQDBAAMQCQDBAAOQCQDBAAQQCQDBAASQCQDBAAUQCQDBAAWQCQDBAAYQCQDBAAaQCQ
DAYAuQCQDAYAyQCQDAYA6QCQDBUAoQD4BwYAoQADCAYACQFrDyYAeQBRCzAAeQAvCDAAeQBjDzAA
cQBXDzQAeQCQDDoAeQCdDDAAeQB8CosAeQAjDpUAeQANDpUAeQBuDpsAeQBDDpsAeQDUDZsAgQCM
DqEAcQCQDAYAiQCQDKcAiQDSCbEAiQDKCQEAMQGQDBAAiQBcDwYAiQB9DgYAiQCADrcAoQCQDAYA
oQBgAb8AoQDzDcYAqQCQDAYAoQB8AcwAQQGdCtIASQFGBdgAUQEODN8AWQE0BeQAWQF7D+0A0QCQ
DPMA8QCQDAYALgALAOcBLgATAPABLgAbAA8CLgAjABgCLgArAEECLgAzAEECLgA7AEECLgBDABgC
LgBLAEcCLgBTAEECLgBbAF4CQwBjAKgCAQFrAKgCIQFrAKgCQQFrAKgCQwFzAKgCYQFrAKgCgQFr
AKgCgwFrAKgCoQFrAKgCwQFrAKgC4QFrAKgCAQJrAKgCIQJrAKgCQQJrAKgCYQJrAKgCgQJrAKgC
oQJrAKgCwQJrAKgC4QJrAKgCAQNrAKgCIQNrAKgCQQNrAKgCYQNrAKgCgQNrAKgCoQNrAKgCwQNr
AKgC4QNrAKgCAQRrAKgCYQRrAKgCIAlrAKgCQAlrAKgCYAlrAKgCgAlrAKgCoAlrAKgCqQl7AA8C
wAlrAKgCyQl7AA8C4AlrAKgCAAprAKgCIAprAKgCQAprAKgCYAprAKgCgAprAKgCoAprAKgCwApr
AKgC4AprAKgCAAtrAKgCIAtrAKgCQAtrAKgCYAtrAKgCgAtrAKgCoAtrAKgCwAtrAKgC4AtrAKgC
AAxrAKgCIAxrAKgCQAxrAKgCgAxrAKgCoAxrAKgCwAxrAKgC4AxrAKgCAA1rAKgCIA1rAKgCQA1r
AKgCYA1rAKgCgA1rAKgCoA1rAKgCwA1rAKgC4A1rAKgCAA5rAKgCIA5rAKgCQA5rAKgCYA5rAKgC
gA5rAKgCoA5rAKgCwA5rAKgC4A5rAKgCAA9rAKgCIA9rAKgCQA9rAKgCYA9rAKgCAQAwAAAADQAb
AEQATgC7AAMAAQAEABsABgAzAAgANAAJAEEACgBNAAsATwAAABQBtAEAAJkIuAEAAF4LtAEAAIoJ
uAEAAFUBvAEAAPYIuAEAACEBvAEAAK0IuAEAADABvAEAAMMIuAEAACgKwAEAAHcJuAEAAOMEwAEA
ADUJuAEAAPMOxQEAALcJuAEAACAGuAEAAGAJuAEAAJMNygEAAKMJuAEAAEQBvAEAAN4IuAEAAGUF
wAEAAEYJuAEAAJ8BuAEAACMJuAEAAAUBtAEAAIMIuAEAAF4LtAEAAIoJuAEAAHABvAEAAAwJuAEA
ACEBvAEAAK0IuAEAADABvAEAAMMIuAEAACgKwAEAAHcJuAEAAOMEwAEAADUJuAEAAPMOxQEAALcJ
uAEAACAGuAEAAGAJuAEAAJMNygEAAKMJuAEAAGUFwAEAAEYJuAEAAJ8BuAEAACMJuAEAAMEKzgEA
AIECvAEAAIQL0wEAAMYCvAEAAAoCvAEAADECvAEAAEkKwAEAAPgEwAEAADYPxQEAAE0GuAEAAMoN
ygEAAFsCvAEAAIwFwAEAALYBuAEAAKUCvAEAAIQL0wEAAOcCvAEAAAoCvAEAADECvAEAAEkKwAEA
APgEwAEAADYPxQEAAE0GuAEAAK4NygEAAIwFwAEAALYBuAEAAP4L2AEAAOcF3QEAAJwO4gEBAAgA
AwABAAkABQABAAoABwABAAsACQABAAwACwABAA0ADQABAA4ADwABAA8AEQABABAAEwABABEAFQAB
ABIAFwABABMAGQABABQAGwABABUAHQABABYAHwABABcAIQABABgAIwABABkAJQABABoAJwABABsA
KQABABwAKwABAB0ALQABAB4ALwABAB8AMQABACAAMwABACEANQABACYANwABACcAOQABACgAOwAB
ACkAPQABACoAPwABACsAQQABACwAQwABAC0ARQABAC4ARwABAC8ASQABADAASwABADEATQABADIA
TwABADMAUQABADQAUwABADUAVQABADYAVwABADcAWQABADgAWwABADkAXQABADoAXwABADsAYQAB
ADwAYwABAD0AZQACAEcAZwACAEkAaQABAEoAaQACAEsAawABAEwAawACAE0AbQABAE4AbQACAE8A
bwABAFAAbwACAFEAcQABAFIAcQACAFMAcwABAFQAcwACAFUAdQABAFYAdQACAFcAdwABAFgAdwAC
AFkAeQABAFoAeQACAFsAewABAFwAewACAF0AfQABAF4AfQACAF8AfwABAGAAfwACAGEAgQABAGIA
gQACAGQAgwABAGUAgwACAGYAhQABAGcAhQACAGgAhwABAGkAhwACAGoAiQABAGsAiQACAGwAiwAB
AG0AiwACAG4AjQABAG8AjQACAHAAjwABAHEAjwACAHIAkQABAHMAkQACAHQAkwABAHUAkwACAHYA
lQABAHcAlQACAHgAlwABAHkAlwACAHoAmQABAHsAmQACAH4AmwACAH8AnQABAIAAnQACAIEAnwDk
VQAAJAAEgAAAAQAAAAAAAAAAAAAAAAC+AQAABAAAAAAAAAAAAAAA+wCSAQAAAAAPAAAAAAAAAAAA
AAAEAdIOAAAAAA8AAAAAAAAAAAAAAAQB/w4AAAAADwAAAAAAAAAAAAAABAEKCwAAAAAEAAAAAAAA
AAAAAAD7ALAMAAAAAAQAAAAAAAAAAAAAAPsA2wkAAAAADwAAAAAAAAAAAAAABAEtCwAAAAAAAAAA
AQAAAAQNAAANAAwAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1lQ29ubmVj
dGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9u
TWFuYWdlcjEwMABJbnQzMgA4RDM3QzgxQjlBNDdDMUI4NzgzMTNGOEE1RkE5QTNGNjlFRDlFQjRE
RkNCODNFOTQ5MDM3RTNGQTVCNEY5RUIzAEludDY0AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9
NDgAPE1vZHVsZT4APFByaXZhdGVJbXBsZW1lbnRhdGlvbkRldGFpbHM+AHNldF9JbmZyYXNXT0lE
AHNldF9DdXN0V09JRABzZXRfRW1wbG95ZWVJRABzZXRfV29ya09yZGVyVHlwZUlEAHNldF9NZXRl
ck1vZGVsSUQAc2V0X0N1c3RvbWVySUQAR2V0T3V0cHV0SUQAc2V0X0ludmVudG9yeUlEAGdldF9D
b21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBzZXRfRFdQcm9jAGdldF9kd19wcm9jAHNldF9kd19w
cm9jAFNDX2UyODlkZWI5ZjdhODQwOTg5OTA3NWIzMjkxOGQ0NjlkAE1hcmtPdXRwdXRzRmluaXNo
ZWQAZ2V0X2VtcGxveWVlX2lkAHNldF9lbXBsb3llZV9pZABnZXRfd29ya19vcmRlcl90eXBlX2lk
AHNldF93b3JrX29yZGVyX3R5cGVfaWQAZ2V0X21ldGVyX21vZGVsX2lkAHNldF9tZXRlcl9tb2Rl
bF9pZABnZXRfY3VzdG9tZXJfd29faWQAc2V0X2N1c3RvbWVyX3dvX2lkAGdldF9pbmZyYXNfd29f
aWQAc2V0X2luZnJhc193b19pZABnZXRfY3VzdG9tZXJfaWQAc2V0X2N1c3RvbWVyX2lkAGdldF9p
bnZlbnRvcnlfaWQAc2V0X2ludmVudG9yeV9pZAA8ZHdfcHJvYz5rX19CYWNraW5nRmllbGQAPGVt
cGxveWVlX2lkPmtfX0JhY2tpbmdGaWVsZAA8d29ya19vcmRlcl90eXBlX2lkPmtfX0JhY2tpbmdG
aWVsZAA8bWV0ZXJfbW9kZWxfaWQ+a19fQmFja2luZ0ZpZWxkADxjdXN0b21lcl93b19pZD5rX19C
YWNraW5nRmllbGQAPGluZnJhc193b19pZD5rX19CYWNraW5nRmllbGQAPGN1c3RvbWVyX2lkPmtf
X0JhY2tpbmdGaWVsZAA8aW52ZW50b3J5X2lkPmtfX0JhY2tpbmdGaWVsZAA8d29fZW5kPmtfX0Jh
Y2tpbmdGaWVsZAA8bm90aWNlX2RhdGV0aW1lPmtfX0JhY2tpbmdGaWVsZAA8am9iX2NvbXBsZXRl
PmtfX0JhY2tpbmdGaWVsZAA8d29fYmVnaW4+a19fQmFja2luZ0ZpZWxkADxzcGFyY193b19udW1i
ZXI+a19fQmFja2luZ0ZpZWxkADxKb2Jfbm90ZXM+a19fQmFja2luZ0ZpZWxkADxqb2Jfbm90ZXM+
a19fQmFja2luZ0ZpZWxkADx3b19lcXVpcF9jb3N0PmtfX0JhY2tpbmdGaWVsZABzZXRfV09FbmQA
UmV0dXJuUmlnaHRXT0VuZABnZXRfd29fZW5kAHNldF93b19lbmQAZGVmYXVsdEluc3RhbmNlAFJ1
bnRpbWVGaWVsZEhhbmRsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBHZXRS
dW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBzZXRfTm90aWNlRGF0ZVRpbWUAZ2V0X25vdGljZV9kYXRl
dGltZQBzZXRfbm90aWNlX2RhdGV0aW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5l
AFZhbHVlVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAc2V0X0pvYkNvbXBsZXRlAGpv
YkNvbXBsZXRlAGdldF9qb2JfY29tcGxldGUAc2V0X2pvYl9jb21wbGV0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
Z2V0X01vbnRoAERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2UyODlkZWI5ZjdhODQw
OTg5OTA3NWIzMjkxOGQ0NjlkLmRsbABzZXRfSW5mcmFzV09JRF9Jc051bGwAc2V0X0N1c3RXT0lE
X0lzTnVsbABzZXRfRW1wbG95ZWVJRF9Jc051bGwAc2V0X1dvcmtPcmRlclR5cGVJRF9Jc051bGwA
c2V0X01ldGVyTW9kZWxJRF9Jc051bGwAc2V0X0N1c3RvbWVySURfSXNOdWxsAHNldF9JbnZlbnRv
cnlJRF9Jc051bGwAc2V0X0RXUHJvY19Jc051bGwAc2V0X1dPRW5kX0lzTnVsbABzZXRfTm90aWNl
RGF0ZVRpbWVfSXNOdWxsAHNldF9Kb2JDb21wbGV0ZV9Jc051bGwAc2V0X1dPQmVnaW5fSXNOdWxs
AHNldF9TcGFyY1dPTnVtYmVyX0lzTnVsbABzZXRfSm9iTm90ZXNfSXNOdWxsAHNldF9XT0VxdWlw
Q29zdF9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AUmFuZG9tAHJlc291cmNlTWFuAEJv
b2xlYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBzZXRfV09CZWdpbgBSZXR1cm5SaWdodFdPQmVnaW4A
aW5CZWdpbgBnZXRfd29fYmVnaW4Ac2V0X3dvX2JlZ2luAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5
c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9S
dW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24AZ2V0X0Nvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQu
U3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVX
cmFwAGdldF9ZZWFyAHNldF9TcGFyY1dPTnVtYmVyAGdldF9zcGFyY193b19udW1iZXIAc2V0X3Nw
YXJjX3dvX251bWJlcgBJbmZyYXN0cnVjdHVyZVdvcmtPcmRlcgBDdXN0b21lcldvcmtPcmRlcgBD
dXN0b21lcldPQnVmZmVyAEluZnJhc1dPQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBCaWdJbnRlZ2VyAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZS5XcmFwcGVyAHJhbmRvbUdlbmVyYXRvcgAuY3RvcgAuY2N0b3IAZ2V0X0hv
dXIAT3V0cHV0SURzAFN5c3RlbS5OdW1lcmljcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2UyODlkZWI5ZjdhODQw
OTg5OTA3NWIzMjkxOGQ0NjlkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTQ19lMjg5ZGViOWY3YTg0MDk4OTkwNzViMzI5MThkNDY5ZC5Qcm9wZXJ0aWVzAFZh
cmlhYmxlcwBzZXRfSm9iTm90ZXMAZ2V0X0pvYl9ub3RlcwBzZXRfSm9iX25vdGVzAGdldF9qb2Jf
bm90ZXMAc2V0X2pvYl9ub3RlcwBBZGRNaW51dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29s
dW1uSW5kZXhlcwBTZXR0aW5ncwBBZGRNb250aHMAQ29ubmVjdGlvbnMAQWRkWWVhcnMAQnVmZmVy
cwBSdW50aW1lSGVscGVycwBBZGRIb3VycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJv
d3MAQWRkRGF5cwBPYmplY3QAU2V0RW5kT2ZSb3dzZXQAb3BfSW1wbGljaXQAZ2V0X0RlZmF1bHQA
VXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQAc2V0X1dPRXF1aXBDb3N0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AGdldF93b19lcXVpcF9jb3N0AHNldF93b19lcXVpcF9jb3N0AGlzQ3VzdABQcmlt
ZU91dHB1dABOZXh0AEFkZFJvdwBnZXRfRGF5AEluaXRpYWxpemVBcnJheQBnZXRfQXNzZW1ibHkA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAVQwB1AHMAdABvAG0A
ZQByAFcATwAAEUkAbgBmAHIAYQBzAFcATwAAFUMAbwBuAG4AZQBjAHQAaQBvAG4AAHFTAEMAXwBl
ADIAOAA5AGQAZQBiADkAZgA3AGEAOAA0ADAAOQA4ADkAOQAwADcANQBiADMAMgA5ADEAOABkADQA
NgA5AGQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAApb1xPF8V
J0Oc5/MwMtrQ/gAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcQoHCAgICAgICAgICQACARKAiRGA
jQMgAAgFIAIICAgJIAYBCAgICAgICQcHCAgICAgICDwHKAgICAgICAgRPQgICAgdCB0IHQgdET0d
EUEdCB0IHQgdEUEICAgNDQ0RPQgRPQ0NDRE9CBE9DQ0NET0JAAIRgJERPRE9BSABET0IBSABET0N
BQABEUEICSADARJJHQgSTQUgAgEIHAMgAAIDBwEIBgACCBJNDgUgAR0ICAUgABKAoQUgABKApQYg
ARKAqQ4EIAASWQgAARKArRGAsQUgABKAtQcgAgEOEoC1CLd6XFYZNOCJCImEXc2AgMyRAwYSOQMG
EhgDBhIcAwYSDAMGEhADBhJRAgYIAwYRYQMGET0DBhFBAgYCAgYOAwYSaQMGEm0DBhIsAwYRNAYg
ARE9ET0IIAMRPQICET0EIAEBCgQgAQECBSABARE9BSABARFBCyAEAQgdCB0SSRJNBSABARJRBCAA
EWEFIAEBEWEEIAARPQQgABFBAyAADgQAABJpBAAAEm0FAAEBEm0EAAASLAMAAAEDKAAKAygAAgMo
AAgEKAARPQQoABFBAygADgQoABJZBCgAEWEECAASaQQIABJtBAgAEiwIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2UyODlkZWI5ZjdhODQwOTg5
OTA3NWIzMjkxOGQ0NjlkAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAtFUAAAAAAAAAAAAAzlUAAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAMBVAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EB8AAAAcAAAAHwAAAB4AAAAfAAAAHgAAAB8AAAAfAAAAHgAAAB8AAAAeAAAAHwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAA
AADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAA
AAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEA
QwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBlADIAOAA5AGQA
ZQBiADkAZgA3AGEAOAA0ADAAOQA4ADkAOQAwADcANQBiADMAMgA5ADEAOABkADQANgA5AGQAAAAw
AAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4A
dABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGUAMgA4ADkAZABlAGIAOQBmADcAYQA4ADQAMAA5
ADgAOQA5ADAANwA1AGIAMwAyADkAMQA4AGQANAA2ADkAZAAuAGQAbABsAAAASAASAAEATABlAGcA
YQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAy
AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZQAyADgAOQBkAGUAYgA5AGYANwBh
ADgANAAwADkAOAA5ADkAMAA3ADUAYgAzADIAOQAxADgAZAA0ADYAOQBkAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGUAMgA4ADkAZABlAGIAOQBmADcAYQA4
ADQAMAA5ADgAOQA5ADAANwA1AGIAMwAyADkAMQA4AGQANAA2ADkAZAAAADQACAABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA4DUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_e289deb9f7a8409899075b32918d469d</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">71</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\CreateWorkOrders.Connections[Connection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  name="Connection" />
              </connections>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO]"
                  hasSideEffects="true"
                  name="CustomerWO">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[CustWOID]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[CustWOID]"
                      name="CustWOID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[SparcWONumber]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[SparcWONumber]"
                      name="SparcWONumber" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[CustomerID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[CustomerID]"
                      name="CustomerID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WorkOrderTypeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WorkOrderTypeID]"
                      name="WorkOrderTypeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOBegin]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOBegin]"
                      name="WOBegin" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOEnd]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOEnd]"
                      name="WOEnd" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOEquipCost]"
                      dataType="cy"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[WOEquipCost]"
                      name="WOEquipCost" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[JobComplete]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[JobComplete]"
                      name="JobComplete" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[JobNotes]"
                      name="JobNotes" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[MeterModelID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[MeterModelID]"
                      name="MeterModelID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[NoticeDateTime]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[NoticeDateTime]"
                      name="NoticeDateTime" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[DWProc]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[DWProc]"
                      name="DWProc" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO]"
                  hasSideEffects="true"
                  name="InfrasWO">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[InfrasWOID]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[InfrasWOID]"
                      name="InfrasWOID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[SparcWONumber]"
                      dataType="i8"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[SparcWONumber]"
                      name="SparcWONumber" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[InventoryID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[InventoryID]"
                      name="InventoryID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[EmployeeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[EmployeeID]"
                      name="EmployeeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WorkOrderTypeID]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WorkOrderTypeID]"
                      name="WorkOrderTypeID" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOBegin]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOBegin]"
                      name="WOBegin" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOEnd]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOEnd]"
                      name="WOEnd" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOEquipCost]"
                      dataType="cy"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[WOEquipCost]"
                      name="WOEquipCost" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[JobComplete]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[JobComplete]"
                      name="JobComplete" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[JobNotes]"
                      name="JobNotes" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[NoticeDateTime]"
                      dataType="date"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[NoticeDateTime]"
                      name="NoticeDateTime" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[DWProc]"
                      dataType="bool"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[DWProc]"
                      name="DWProc" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="FF_ERROR CustomerWO"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Connections[FlatFileConnection]"
                  connectionManagerID="{85CB49A0-E8E7-4B99-BA5E-2B985843656A}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Flat File Connection Manager CustWO]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[WOCustomerID]"
                      cachedDataType="i8"
                      cachedName="WOCustomerID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[CustWOID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOCustomerID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[SparcWONumber]"
                      cachedDataType="i8"
                      cachedName="SparcWONumber"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[SparcWONumber]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[SparcWONumber]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[WorkOrderTypeID]"
                      cachedDataType="i4"
                      cachedName="WorkOrderTypeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WorkOrderTypeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WorkOrderTypeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[WOBegin]"
                      cachedDataType="date"
                      cachedName="WOBegin"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WOBegin]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOBegin]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[WOEnd]"
                      cachedDataType="date"
                      cachedName="WOEnd"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WOEnd]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEnd]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[WOEquipCost]"
                      cachedDataType="cy"
                      cachedName="WOEquipCost"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WOEquipCost]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEquipCost]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[JobComplete]"
                      cachedDataType="bool"
                      cachedName="JobComplete"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[JobComplete]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobComplete]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[JobNotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="240"
                      cachedName="JobNotes"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[JobNotes]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobNotes]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[MeterModelID]"
                      cachedDataType="i4"
                      cachedName="MeterModelID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[MeterModelID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[MeterModelID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[NoticeDateTime]"
                      cachedDataType="date"
                      cachedName="NoticeDateTime"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[NoticeDateTime]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[NoticeDateTime]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[DWProc]"
                      cachedDataType="bool"
                      cachedName="DWProc"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[DWProc]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[DWProc]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[CustWOID]"
                      dataType="i8"
                      name="CustWOID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[SparcWONumber]"
                      dataType="i8"
                      name="SparcWONumber" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WorkOrderTypeID]"
                      dataType="i4"
                      name="WorkOrderTypeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WOBegin]"
                      dataType="date"
                      name="WOBegin" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WOEnd]"
                      dataType="date"
                      name="WOEnd" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[WOEquipCost]"
                      dataType="cy"
                      name="WOEquipCost" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[JobComplete]"
                      dataType="bool"
                      name="JobComplete" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="JobNotes" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[MeterModelID]"
                      dataType="i4"
                      name="MeterModelID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[NoticeDateTime]"
                      dataType="date"
                      name="NoticeDateTime" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[DWProc]"
                      dataType="bool"
                      name="DWProc" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="FF_ERROR InfrasWO"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Connections[FlatFileConnection]"
                  connectionManagerID="{FF10B692-5887-4E1B-BCCF-9BAEB8AD058D}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Flat File Connection Manager InfrasWO]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[WOInfrasID]"
                      cachedDataType="i8"
                      cachedName="WOInfrasID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[InfrasWOID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOInfrasID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[SparcWONumber]"
                      cachedDataType="i8"
                      cachedName="SparcWONumber"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[SparcWONumber]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[SparcWONumber]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[InventoryID]"
                      cachedDataType="i4"
                      cachedName="InventoryID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[InventoryID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[InventoryID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[WorkOrderTypeID]"
                      cachedDataType="i4"
                      cachedName="WorkOrderTypeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WorkOrderTypeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WorkOrderTypeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[WOBegin]"
                      cachedDataType="date"
                      cachedName="WOBegin"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WOBegin]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOBegin]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[WOEnd]"
                      cachedDataType="date"
                      cachedName="WOEnd"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WOEnd]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEnd]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[WOEquipCost]"
                      cachedDataType="cy"
                      cachedName="WOEquipCost"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WOEquipCost]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEquipCost]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[JobComplete]"
                      cachedDataType="bool"
                      cachedName="JobComplete"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[JobComplete]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobComplete]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[JobNotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="240"
                      cachedName="JobNotes"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[JobNotes]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobNotes]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[NoticeDateTime]"
                      cachedDataType="date"
                      cachedName="NoticeDateTime"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[NoticeDateTime]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[NoticeDateTime]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[DWProc]"
                      cachedDataType="bool"
                      cachedName="DWProc"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[DWProc]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[DWProc]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[InfrasWOID]"
                      dataType="i8"
                      name="InfrasWOID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[SparcWONumber]"
                      dataType="i8"
                      name="SparcWONumber" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[InventoryID]"
                      dataType="i4"
                      name="InventoryID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WorkOrderTypeID]"
                      dataType="i4"
                      name="WorkOrderTypeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WOBegin]"
                      dataType="date"
                      name="WOBegin" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WOEnd]"
                      dataType="date"
                      name="WOEnd" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[WOEquipCost]"
                      dataType="cy"
                      name="WOEquipCost" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[JobComplete]"
                      dataType="bool"
                      name="JobComplete" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="JobNotes" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[NoticeDateTime]"
                      dataType="date"
                      name="NoticeDateTime" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[DWProc]"
                      dataType="bool"
                      name="DWProc" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\Lookup Emp for CustWO"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup Emp for CustWO"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Employee]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Employee]) [refTable]
where [refTable].[EmployeeID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FName" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MName" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpAddressLn1" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpAddressLn2" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpCity" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpState" dataType="DT_STR" length="2" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpZipcode" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="HourlyRate" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[EmployeeID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Connections[OleDbConnection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Inputs[Lookup Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO].Columns[EmployeeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">EmployeeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output].Columns[EmpID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output].Columns[EmpID]"
                      name="EmpID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output].Columns[HourlyRate]"
                      dataType="cy"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output].Columns[HourlyRate]"
                      name="HourlyRate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">HourlyRate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup Emp for InfrasWO"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Employee]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Employee]) [refTable]
where [refTable].[EmployeeID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="EmployeeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FName" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="MName" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="LName" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpAddressLn1" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpAddressLn2" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpCity" dataType="DT_STR" length="30" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpState" dataType="DT_STR" length="2" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="EmpZipcode" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="HourlyRate" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[EmployeeID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Connections[OleDbConnection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Inputs[Lookup Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      lineageId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO].Columns[EmployeeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">EmployeeID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output].Columns[EmpID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output].Columns[EmpID]"
                      name="EmpID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output].Columns[HourlyRate]"
                      dataType="cy"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output].Columns[HourlyRate]"
                      name="HourlyRate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">HourlyRate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\Write Customer WO"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Write Customer WO"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WOCustomer]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\Write Customer WO.Connections[OleDbConnection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[SparcWONumber]"
                      cachedDataType="i8"
                      cachedName="SparcWONumber"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[SparcWONumber]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[SparcWONumber]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[CustomerID]"
                      cachedDataType="i4"
                      cachedName="CustomerID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[CustomerID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[WorkOrderTypeID]"
                      cachedDataType="i4"
                      cachedName="WorkOrderTypeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WorkOrderTypeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WorkOrderTypeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[WOBegin]"
                      cachedDataType="date"
                      cachedName="WOBegin"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOBegin]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOBegin]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[WOEnd]"
                      cachedDataType="date"
                      cachedName="WOEnd"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEnd]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEnd]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[WOEquipCost]"
                      cachedDataType="cy"
                      cachedName="WOEquipCost"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEquipCost]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOEquipCost]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[JobComplete]"
                      cachedDataType="bool"
                      cachedName="JobComplete"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[JobComplete]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobComplete]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[JobNotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="240"
                      cachedName="JobNotes"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[JobNotes]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[JobNotes]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[MeterModelID]"
                      cachedDataType="i4"
                      cachedName="MeterModelID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[MeterModelID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[MeterModelID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[NoticeDateTime]"
                      cachedDataType="date"
                      cachedName="NoticeDateTime"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[NoticeDateTime]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[NoticeDateTime]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[DWProc]"
                      cachedDataType="bool"
                      cachedName="DWProc"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[DWProc]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[DWProc]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[WOCustomerID]"
                      cachedDataType="i8"
                      cachedName="WOCustomerID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOCustomerID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOCustomerID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].Columns[WOLaborCost]"
                      cachedDataType="cy"
                      cachedName="WOLaborCost"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOLaborCost]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0].Columns[WOLaborCost]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOCustomerID]"
                      dataType="i8"
                      name="WOCustomerID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[SparcWONumber]"
                      dataType="i8"
                      name="SparcWONumber" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      dataType="i4"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WorkOrderTypeID]"
                      dataType="i4"
                      name="WorkOrderTypeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOBegin]"
                      dataType="dbTimeStamp"
                      name="WOBegin" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEnd]"
                      dataType="dbTimeStamp"
                      name="WOEnd" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEquipCost]"
                      dataType="cy"
                      name="WOEquipCost" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[JobComplete]"
                      dataType="bool"
                      name="JobComplete" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="240"
                      name="JobNotes" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[MeterModelID]"
                      dataType="i4"
                      name="MeterModelID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[NoticeDateTime]"
                      dataType="dbTimeStamp"
                      name="NoticeDateTime" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[DWProc]"
                      dataType="bool"
                      name="DWProc" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input].ExternalColumns[WOLaborCost]"
                      dataType="cy"
                      name="WOLaborCost" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GenerateWorkOrders\Write Infras WO"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Write Infras WO"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[WOInfras]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GenerateWorkOrders\Write Infras WO.Connections[OleDbConnection]"
                  connectionManagerID="{A2D7762D-E044-4FB1-A5F6-14089E509C8C}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SparcElectricHybridDW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[SparcWONumber]"
                      cachedDataType="i8"
                      cachedName="SparcWONumber"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[SparcWONumber]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[SparcWONumber]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[InventoryID]"
                      cachedDataType="i4"
                      cachedName="InventoryID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[InventoryID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[InventoryID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                      cachedDataType="i4"
                      cachedName="EmployeeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[EmployeeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[WorkOrderTypeID]"
                      cachedDataType="i4"
                      cachedName="WorkOrderTypeID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WorkOrderTypeID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WorkOrderTypeID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[WOBegin]"
                      cachedDataType="date"
                      cachedName="WOBegin"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOBegin]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOBegin]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[WOEnd]"
                      cachedDataType="date"
                      cachedName="WOEnd"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEnd]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEnd]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[WOEquipCost]"
                      cachedDataType="cy"
                      cachedName="WOEquipCost"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEquipCost]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOEquipCost]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[JobComplete]"
                      cachedDataType="bool"
                      cachedName="JobComplete"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[JobComplete]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobComplete]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[JobNotes]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="240"
                      cachedName="JobNotes"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[JobNotes]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[JobNotes]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[NoticeDateTime]"
                      cachedDataType="date"
                      cachedName="NoticeDateTime"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[NoticeDateTime]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[NoticeDateTime]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[DWProc]"
                      cachedDataType="bool"
                      cachedName="DWProc"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[DWProc]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[DWProc]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[WOInfrasID]"
                      cachedDataType="i8"
                      cachedName="WOInfrasID"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOInfrasID]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOInfrasID]" />
                    <inputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].Columns[WOLaborCost]"
                      cachedDataType="cy"
                      cachedName="WOLaborCost"
                      externalMetadataColumnId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOLaborCost]"
                      lineageId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0].Columns[WOLaborCost]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOInfrasID]"
                      dataType="i8"
                      name="WOInfrasID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[SparcWONumber]"
                      dataType="i8"
                      name="SparcWONumber" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[InventoryID]"
                      dataType="i4"
                      name="InventoryID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WorkOrderTypeID]"
                      dataType="i4"
                      name="WorkOrderTypeID" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOBegin]"
                      dataType="dbTimeStamp"
                      name="WOBegin" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEnd]"
                      dataType="dbTimeStamp"
                      name="WOEnd" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOEquipCost]"
                      dataType="cy"
                      name="WOEquipCost" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[JobComplete]"
                      dataType="bool"
                      name="JobComplete" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[JobNotes]"
                      codePage="1252"
                      dataType="str"
                      length="240"
                      name="JobNotes" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[NoticeDateTime]"
                      dataType="dbTimeStamp"
                      name="NoticeDateTime" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[DWProc]"
                      dataType="bool"
                      name="DWProc" />
                    <externalMetadataColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input].ExternalColumns[WOLaborCost]"
                      dataType="cy"
                      name="WOLaborCost" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\GenerateWorkOrders.Paths[CustomerWO]"
              endId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Inputs[Lookup Input]"
              name="CustomerWO"
              startId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[CustomerWO]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[InfrasWO]"
              endId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Inputs[Lookup Input]"
              name="InfrasWO"
              startId="Package\GenerateWorkOrders\CreateWorkOrders.Outputs[InfrasWO]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[Lookup Match Output]"
              endId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Inputs[Incoming0]"
              name="Lookup Match Output"
              startId="Package\GenerateWorkOrders\Lookup Emp for CustWO.Outputs[Lookup Match Output]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[Lookup Match Output1]"
              endId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Inputs[Incoming0]"
              name="Lookup Match Output"
              startId="Package\GenerateWorkOrders\Lookup Emp for InfrasWO.Outputs[Lookup Match Output]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[OLE DB Destination Error Output]"
              endId="Package\GenerateWorkOrders\FF_ERROR InfrasWO.Inputs[Flat File Destination Input]"
              name="OLE DB Destination Error Output"
              startId="Package\GenerateWorkOrders\Write Infras WO.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[OLE DB Destination Error Output1]"
              endId="Package\GenerateWorkOrders\FF_ERROR CustomerWO.Inputs[Flat File Destination Input]"
              name="OLE DB Destination Error Output"
              startId="Package\GenerateWorkOrders\Write Customer WO.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[Outgoing0]"
              endId="Package\GenerateWorkOrders\Write Customer WO.Inputs[OLE DB Destination Input]"
              name="Outgoing0"
              startId="Package\GenerateWorkOrders\Add WO Labor Cost to data.Outputs[Outgoing0]" />
            <path
              refId="Package\GenerateWorkOrders.Paths[Outgoing01]"
              endId="Package\GenerateWorkOrders\Write Infras WO.Inputs[OLE DB Destination Input]"
              name="Outgoing0"
              startId="Package\GenerateWorkOrders\Add WO Labor to Infras Data.Outputs[Outgoing0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="184,42"
          Id="Package\GenerateWorkOrders"
          TopLeft="133,104" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\GenerateWorkOrders">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="213,42"
          Id="Package\GenerateWorkOrders\Lookup Emp for CustWO"
          TopLeft="61.625,151" />
        <NodeLayout
          Size="171,42"
          Id="Package\GenerateWorkOrders\CreateWorkOrders"
          TopLeft="282.5,26.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\GenerateWorkOrders\Lookup Emp for InfrasWO"
          TopLeft="437.25,155" />
        <NodeLayout
          Size="213,42"
          Id="Package\GenerateWorkOrders\Add WO Labor Cost to data"
          TopLeft="61.625,257.791666666667" />
        <NodeLayout
          Size="220,42"
          Id="Package\GenerateWorkOrders\Add WO Labor to Infras Data"
          TopLeft="437.25,258.666666666667" />
        <NodeLayout
          Size="213,42"
          Id="Package\GenerateWorkOrders\Write Customer WO"
          TopLeft="61.625,364.583333333333" />
        <NodeLayout
          Size="220,42"
          Id="Package\GenerateWorkOrders\FF_ERROR InfrasWO"
          TopLeft="437.25,466" />
        <NodeLayout
          Size="213,42"
          Id="Package\GenerateWorkOrders\FF_ERROR CustomerWO"
          TopLeft="61.625,471.375" />
        <NodeLayout
          Size="220,42"
          Id="Package\GenerateWorkOrders\Write Infras WO"
          TopLeft="437.25,362.333333333333" />
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[Outgoing0]"
          TopLeft="168.125,299.791666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.7916666666667"
              Start="0,0"
              End="0,57.2916666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.2916666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[OLE DB Destination Error Output1]"
          TopLeft="168.125,406.583333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.7916666666667"
              Start="0,0"
              End="0,57.2916666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.2916666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.20890625,22.9290364583333,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[OLE DB Destination Error Output]"
          TopLeft="547.25,404.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.6666666666667"
              Start="0,0"
              End="0,54.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.20890625,21.3665364583333,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[Lookup Match Output1]"
          TopLeft="547.25,197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.6666666666667"
              Start="0,0"
              End="0,54.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,21.2786458333334,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[Lookup Match Output]"
          TopLeft="168.125,193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.7916666666667"
              Start="0,0"
              End="0,57.2916666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.2916666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,22.8411458333334,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[InfrasWO]"
          TopLeft="395.166666666667,68.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="152.083333333333,86.5"
              Start="0,0"
              End="152.083333333333,79">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0811123986095" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.0811123986095"
                    Point2="0,35.0811123986095"
                    Point3="4,35.0811123986095" />
                  <mssgle:LineSegment
                    End="148.083333333333,35.0811123986095" />
                  <mssgle:CubicBezierSegment
                    Point1="148.083333333333,35.0811123986095"
                    Point2="152.083333333333,35.0811123986095"
                    Point3="152.083333333333,39.0811123986095" />
                  <mssgle:LineSegment
                    End="152.083333333333,79" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="54.4822526041665,40.0811123986095,43.118828125,9.7978515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[CustomerWO]"
          TopLeft="340.833333333333,68.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-172.708333333333,82.5"
              Start="0,0"
              End="-172.708333333333,75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.4588644264195" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.4588644264195"
                    Point2="0,33.4588644264195"
                    Point3="-4,33.4588644264195" />
                  <mssgle:LineSegment
                    End="-168.708333333333,33.4588644264195" />
                  <mssgle:CubicBezierSegment
                    Point1="-168.708333333333,33.4588644264195"
                    Point2="-172.708333333333,33.4588644264195"
                    Point3="-172.708333333333,37.4588644264195" />
                  <mssgle:LineSegment
                    End="-172.708333333333,75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.119498697916,38.4588644264195,59.5306640625,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GenerateWorkOrders.Paths[Outgoing01]"
          TopLeft="547.25,300.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.6666666666667"
              Start="0,0"
              End="0,54.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\GenerateWorkOrders\Lookup Emp for CustWO">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Employee]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GenerateWorkOrders\Lookup Emp for InfrasWO">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Employee]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GenerateWorkOrders\Write Customer WO">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GenerateWorkOrders\Write Infras WO">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>